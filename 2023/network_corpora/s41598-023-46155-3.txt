introduction recent year exponential growth available data prompted surge studying complex system across various research domain network become standard tool modeling entity interaction within system node edge representing entity relationship respectively moreover toolbox network analysis continues expand introduction numerous tool facilitate various network analysis task however analyzing large network challenging one solution issue reducing network size retaining essential property objective active research area referred various term literature sparsification summarization validated network extraction skeleton extraction backbone extraction backbone extraction offer several advantage including reduced data volume storage faster graph algorithm query support interactive analysis noise elimination backbone extraction wide range application one various type network social biological brain gene metabolic food web environmental finance trade information political transportation others application broad range including clustering classification community detection outlier detection pattern set mining identification source infection large graph visualization among others practitioner must operate suitable method various application use case therefore growing interest comparing backbone extraction technique literature furthermore new tool introduced fulfill multitude application requirement tool implement variety backbone extraction technique different framework one distinguish two main backbone extraction approach structural statistical structural method focus network topological feature extract backbone specific structural property remove node edge critical property preserve contrast statistical method aim eliminating noisy node edge blur network information evaluate significance node edge using hypothesis-testing framework remove node link qualified noise tool introduced coscia incorporates three statistical three structural backbone-extracting method weighted network python module panda enhance performance backbone extraction technique operate dataframe input process directed undirected network neal present backbone package extract network backbone implement seventeen backbone extraction method six method primarily designed bipartite projection two weighted network ten unweighted network also provides generic sparsify function allows custom construction many backbone method method operate matrix object sparse matrix object dataframe object igraph input allow processing directed undirected network traditionally user need implement code compare different backbone extraction method introduce netbone python package specifically designed extracting comparing backbone simple weighted network offer extensive collection method including six statistical thirteen structural one hybrid backbone extraction method also provides filtering flexibility tailor backbone extraction process furthermore implement multiple way compare backbone include boolean filter extraction technique extract single backbone threshold fraction filter dedicated method assigning score node link user indicate threshold value filter element score value also show fraction feature preserved associated top score addition package provides comparison framework visualization module plot result goal assist user comparing various backbone extraction method using set evaluation measure framework allows comparing backbone property distribution evolution various network property backbone size tunable package includes set predefined property used evaluating extracted backbone moreover user integrate backbone extraction method evaluation measure comparison framework furthermore framework facilitates extraction consensual backbone characterized common node edge among given set backbone following section first briefly introduce backbone extraction method implemented netbone package present package architecture module highlighting numerous advantage next provide simple toy example illustrating use netbone finally showcase power netbone comparison framework five experiment first experiment illustrates comparison framework assist evaluating backbone extraction method comparing various topological property second experiment highlight framework could aid user determining appropriate fraction threshold extracting backbone third experiment illustrates user evaluate distribution property value extracted backbone fourth experiment introduces consensual backbone user create unlimited combination using backbone extraction method finally fifth experiment illustrates user integrate new backbone extraction method comparison framework evaluate using custom evaluation measure backbone extraction method backbone extraction method identify significant essential part within network edge filtering technique capture important relationship node removing meaningful noise-like connection however defining crucial link network subjective dependent specific application research question therefore researcher developed several approach identify extract backbone network assumption criterion importance one distinguish mainly statistical structural method additionally hybrid method incorporate statistical structural approach table summarizes main feature method implemented netbone statistical backbone extraction method statistical backbone method evaluate significance edge network using hypothesis testing based empirical distribution null model compute p-values edge filter edge based p-values netbone implement six statistical backbone filtering technique disparity filter assumes normalized weight node edge follow uniform distribution comparison observed normalized edge weight null model allow filtering edge desired significance level since define null model node edge weight significant viewpoint one node marginal likelihood filter disparity filter ass significance edge light node connects independently marginal likelihood filter considers two node edge connects assumes integer-weighted link multiple unit edge null model assumes unit edge randomly chooses two node result binomial distribution word calculates probability drawing least unit edge strength network summation weight probability proportional node strength noise corrected filter like marginal likelihood filter assumes edge weight drawn binomial distribution however using bayesian framework estimate probability observing weight connecting two node framework enables generate posterior variance edge posterior variance allows create confidence interval edge weight finally remove edge weight standard deviation stronger expectation parameter algorithm also provides direct approximation binomial distribution similar marginal likelihood filter enhanced configuration model filter enhances null model marginal likelihood filter using enhanced configuration model network reconstruction null model based canonical maximum-entropy ensemble weighted network degree strength distribution actual network locally adaptive network sparsification filter make assumption underlying weight distribution instead empirical cumulative density function used evaluate statistical significance thus viewpoint edge incident node calculates probability choosing edge randomly weight equal observed weight multiple linkage analysis assumes weight evenly distributed among node neighbor ranging calculates goodness fit comparing observed distribution hypothetical one using correlation coefficient optimal number edge retain node determined number yield highest correlation coefficient structural backbone extraction method structural backbone method operate network topology extract backbone specific topological property one divide two category first category includes technique extracting single substructure network adjusted typically result single backbone second category assigns score node edge based topological feature method tuned setting threshold selecting top fraction score netbone contains thirteen structural backbone filtering technique global threshold filter straightforward technique filter edge weight lower predefined threshold maximum spanning tree filter extract subgraph includes node connected without forming cycle maximum total edge weight doubly stochastic filter transforms network adjacency matrix doubly stochastic matrix iteratively normalizing row column value using respective sum next one sort edge descending order based normalized weight one add edge backbone sequentially includes node original network single connected component always possible transform matrix doubly-stochastic one high salience skeleton filter based concept edge salience first one construct shortest path tree node merging shortest path node every node network edge salience computed proportion shortest-path tree edge present author observed edge salience follows bimodal distribution near boundary consequently retain edge salience near eliminating need select arbitrary threshold h-backbone filter inspired h-index edge betweenness first using edge weight extract h-strength network largest natural number link weight least equal extract h-bridge network similarly bridge edge edge betweenness divided number node finally h-backbone merges two network metric ultrametric distance backbone filter method extract subgraph consisting shortest path network still diverge definition shortest path length specifically metric filter defines shortest path length sum edge distance contrast ultrametric filter defines maximum distance among edge path modularity backbone filter based concept vitality index vitality index measure contribution node network modularity computes modularity variation removing network node one extract backbone setting threshold value node vitality index selecting top vitality fraction node planar maximally filtered graph simply reconstructs graph adding edge highest weight iteratively long resulting graph still planar primary linkage analysis method preserve edge largest weight node global sparsification assuming edge likely within cluster node endpoint high neighbor overlap algorithm calculates similarity endpoint using jaccard similarity extract backbone graph applying threshold edge similarity node degree node degree computed counting number connection link node node network one filter node based degree score setting threshold edge betweenness computes edge betweenness edge first find shortest path network edge count shortest path passing edge filtered using threshold based edge betweenness score hybrid backbone extraction method hybrid backbone extraction method offer unique approach combining statistical structural methodology method first calculate edge node score based network topology subsequently statistical test applied computed score globally locally adaptive backbone combine disparity high salience skeleton filter measure involvement edge fraction shortest path connecting node rest network edge edge involvement computed node level furthermore one null hypothesis determine statistical significance edge based involvement involvement assumed follow uniform gaussian power law distribution parameter regulates influence node degree statistical significance table summary backbone extraction method characteristic implemented netbone full size table netbone package netbone python package freely available public gitlab http provides straightforward easy-to-use framework comparing selecting appropriate method given case study figure provides diagram representing various module netbone package give brief presentation architecture present various module main feature figure diagram illustrates different module provided netbone package interaction full size image backbone module backbone module contains backbone class central backbone extraction functionality running backbone extraction method return instance class contains calculated score structural method p-values statistical method associated node edge chosen backbone extraction technique one inspect score p-values invoking to_dataframe function generates data frame corresponding score p-values additionally module allows user easily incorporate newly defined backbone extraction method netbone comparison framework required user return instance backbone class end function structural statistical module statistical structural module group method based underlying methodology invoking function module calculates p-values statistical method disparity_filter computes score structural technique high_salience_skeleton structural method extract substructure graph maximum_spanning_tree assigns boolean value edge node network case return new instance backbone class containing computed value filter module filter module powerful component allowing user extract backbone meet specific need accomplishes separating backbone value calculation score p-value boolean filtering process example user use threshold_filter function extract backbone based score p-value threshold use fraction_filter function obtain backbone desired size boolean_filter function designed method extracting single substructure network table summarizes filter associated various backbone extraction method measure module measure module contains set evaluation measure allowing user compute topological property extracted backbone measure carefully defined include used seminal work serrano compare module compare module standout feature providing robust comparison framework compare class module offer four main function first property function computes set specified property original network extracted backbone using desired filter second properties_progression function computes evolution given property original network set extracted backbone set defined using filter type array threshold fraction third distribution_ks_statistic function computes statistic cumulative distribution original network property distribution given backbone need function extract property value filter type finally using consent function module allows extraction called consensual backbone given set different backbone method computes intersection backbone visualize module visualize module designed facilitate comparison generating visually appealing plot contains three main plotting function first radar_plot function generates radar chart separate axis added property chart useful clearly concisely represents multiple property single plot simplifies backbone analysis comparison across various topological dimension second progression_plot function generates simple line chart display evolution defined property fraction threshold change finally distribution_plot function generates simple scatter chart display distribution defined property value extracted backbone table summary filter applied backbone extraction method full size table netbone action toy example illustrate usage netbone consider high salience skeleton method misérables network chose extraction technique associated three filtering method provided netbone begin using netbone package one install latest release either pypi repository http directly project gitlab repository pip install netbone pip install git+https installed netbone package imported using import netbone netbone package handle two type input networkx graph dataframe example load misérables network networkx apply high_salience_skeleton method resulting score examined using to_dataframe function shown import networkx nx.les_miserables_graph nb.high_salience_skeleton b.to_data_frame source target weight high salience skeleton score napoleon myriel true 1.000 myriel mllebaptistine true 0.987 myriel mmemagloire true 0.987 myriel countessdelo true 1.000 myriel geborand true 1.000 myriel champtercier true 1.000 ... ... ... ... ... high salience skeleton method proposed grady exhibit bimodal distribution score centered around default approach method keep edge score greater 0.8 netbone accomplished using boolean_filter however case two node missing extracted backbone particular example fix issue user adjust threshold using threshold_filter function one use threshold 0.7 retain network node additionally user control size backbone using fraction_filter keeping network following code show netbone netbone.filters import boolean_filter threshold_filter fraction_filter backbone1 boolean_filter backbone2 threshold_filter 0.7 backbone3 fraction_filter 0.15 backbone extracted user use application case study sake simplicity visualize backbone using networkx spiral layout figure present misérables original network backbone using boolean_filter threshold_filter fraction_filter size node proportional degree width link proportional weight lower-left panel figure display backbone processed boolean_filter output high-salience skeleton method default value retains edge participate least shortest path network backbone sparser original network fraction link reduced however node missing backbone lower-middle panel show backbone using threshold_filter adjust threshold includes edge participating least shortest path network backbone contains node two link previous one lower-right panel show backbone fraction_filter retaining top score edge sparser backbone multiple component edge connect node account approximately node network figure original misérables network extracted backbone using boolean_filter default threshold 0.8 threshold_filter threshold value 0.7 fraction_filter fraction 0.15 number node edge respectively size node proportional degree width link proportional weight full size image exploring netbone comparison framework comparison framework netbone stand key feature allows user easily explore compare backbone extracted various method built-in evaluation measure moreover user easily integrate backbone extraction method evaluation measure comparison framework framework provides five distinct use case comparison purpose first use case involves comparing backbone topological property achieved using property method compute selected property backbone one visualize result radar plot using radar_plot method second use case focus comparing evolution backbone property user compute selected property various fraction edges/nodes varying significance level threshold backbone done using properties_progression method one visualize result line chart using progression_plot method third use case center around comparing topological property distribution user ass distance cumulative distribution given property couple backbone one must compute kolmogorov–smirnov statistic cumulative distribution evaluation using distribution_ks_statistic method distribution_plot method allows visualizing difference scatter plot fourth use case involves extracting consensual backbone entail keeping identical node edge among backbone accomplished using consent method finally fifth use case illustrates user integrate backbone extraction method custom evaluation measure netbone comparison framework following subsection illustrate ability framework evaluate effectiveness backbone extraction method across various application use air transportation network introduced work serrano consists airport node continental edge represent route airport weight assigned edge correspond number passenger supplementary material contain detailed explanation code experiment experiment experiment focus assessing connectivity structural backbone extraction method air transportation network using netbone comparison framework aim connected filtered network applying filter since connectivity essential property transportation network figure illustrates process flow within netbone comparison framework computing topological property first extract network backbone using eight structural backbone extraction method use boolean filter within framework since method extract substructure network next compute various property particular focus reachability reachability measure connectivity node network quantifying fraction node pair communicate furthermore examine additional property node edge weight fraction density average degree extracted backbone result presented table easy numerical analysis visualized using spider plot figure diagram illustrating flow within netbone comparison framework compute topological property extracted backbone full size image table fig present topological property extracted backbone one observe method yield backbone reachability value except doubly stochastic primary link analysis high salience skeleton method reachability represents fraction node pair communicate network suppose user interested backbone reachability according criterion one exclude doubly stochastic primary link analysis high salience skeleton method table topological property structural backbone computed using netbone comparison framework full size table figure radar chart showing topological property extracted structural backbone plotted using netbone topological property fraction node edge weight preserved backbone density average degree reachability extracted backbone full size image examining node fraction find h-backbone method isolates node preserve node consequently exclude h-backbone selection moving forward among remaining method focus shift choosing technique preserve highest weight fraction consequently select metric backbone method retains weight however one note method includes edge resulting average degree 3.5 low density 0.0094 summarize use case filter original transportation network constraint indeed aim retain node ensuring remain connected within single component furthermore one want maximize preservation weight using netbone comparison framework evaluate compare performance various backbone extraction method based multiple property allows identify metric backbone method preserved highest fraction weight maintaining connectivity within single component experiment previous experiment focus structural method backbone extraction method adjusted using threshold score selecting top fraction score experiment objective sparsify network preserving node crucial context transportation network achieve use netbone comparison framework help determine appropriate fraction figure illustrates process flow within netbone comparison framework computing topological property fraction edge threshold varies experiment extract backbone using five structural backbone extraction using fraction filter gradually sparsify network adjusting fraction 0.01 0.5 aim keep backbone edge size original network fraction compute node fraction ass preservation node result table easy analysis additionally one use progression line plot visualize evolution node fraction fraction filter varies figure diagram illustrating flow within netbone comparison framework compute evolution topological property threshold varies extracted backbone full size image table fig present node fraction backbone extraction method function edge fraction observe global threshold doubly stochastic global sparsification method fail extract backbone includes node keeping edge fraction consequently exclude method list interest however betweenness method allows maintain node edge fraction high salience skeleton method stand enabling preserve node edge fraction low table node fraction backbone extraction method function edge fraction calculated using netbone comparison framework full size table figure line chart showing fraction node extracted structural backbone function fraction edge plotted using netbone full size image experiment aim identify optimal structural backbone extraction method sparsify transportation network preserving node netbone comparison framework evaluate different method using fraction filter high salience skeleton method successfully achieved objective retaining node low edge fraction worth noting one use approach netbone comparison framework application alternative criterion experiment experiment use netbone comparison framework ass global threshold statistical method capture weight degree distribution indeed using global threshold method weight distribution truncated emphasizes edge hub air transportation network edge typically high weight due significant volume passenger involving large carrier one use statistical method capture different scale importance highlight hub spoke topology method account multiple scale provide comprehensive understanding network structure figure illustrates flow within framework comparing cumulative distribution first apply global threshold method statistical method network use threshold filter within netbone comparison framework filter network global threshold method set threshold value average weight statistical method use significance level 0.05 next compute kolmogorov–smirnov statistic measure similarity weight degree distribution original network backbone generated method result table easy analysis additionally one use distribution scatter plot compare distribution visually figure diagram illustrating flow within netbone comparison framework compute distribution topological property extracted backbone full size image table present statistic weight degree distribution original network extracted backbone enhanced configuration model filter exhibit lowest statistic weight distribution indicates backbone generated method closely resembles original weight distribution effectively highlighting hub spoke network topology table statistic comparing weight degree distribution original network extracted backbone calculated using netbone comparison framework full size table hand marginal likelihood filter show lowest statistic degree distribution suggests method better preserve degree distribution original network user seeking retain nearest degree distribution consider marginal likelihood filter one use netbone plot scatter plot compare distribution visually figure illustrates result visualization showcasing distribution obtained backbone extraction method figure scatter chart display original network cumulative weight degree distribution extracted backbone plotted using netbone full size image use case involves filtering transportation network find backbone weight degree distribution closely match original network netbone comparison framework crucial selecting suitable backbone extraction method framework compare distribution different method identify enhance configuration model filter closest match weight distribution marginal likelihood filter closest match degree distribution experiment statistical method used backbone extraction netbone based different null model aiming understand distribution generation weight network result null model yield different backbone netbone allows compute intersection various backbone extraction method extracting common node edge across method allows observing consensual backbone experiment use netbone comparison framework extract consensus backbone using statistical backbone extraction method process flow depicted fig outline step extracting consensus backbone firstly apply statistical method filter using threshold filter significance level 0.05 extract consensus backbone taking intersection extracted backbone figure diagram illustrating flow within netbone comparison framework extract consensual backbone extracted backbone full size image figure provides visual representation extracted backbone showcasing number preserved node edge method consensual backbone includes node edge node edge hold significant value considering various null model used statistical method comparing consensual backbone technique observe prominently highlight hub spoke network structure effectively individual statistical method figure air transportation network corresponding backbone extracted using netbone number node edge respectively full size image experiment demonstrates netbone statistical consensual backbone effectively emphasizes hub spoke network structure compared individual statistical backbone moreover worth noting consensual extraction method restricted statistical method user also use structural method allowing various combination variation backbone explore analyze distinctive characteristic consensual backbone experiment experiment illustrates user integrate custom backbone extraction method custom evaluation property netbone comparison framework illustrate process define new_backbone_method function generates random value keep new edge property named new_score function return new instance backbone class initialize instance backbone class user provide networkx graph containing new edge score name new method edge property name edge property name represents p-value set true otherwise false next user must specify array compatible filter given edge property numerical value appropriate filter use case threshold_filter fraction_filter lastly filter_on parameter indicate whether filter applied edge node new backbone extraction method defined one easily apply method add comparison framework using add_backbone method user continue adding evaluation measure built-in method netbone implementing new custom evaluation measure illustrate define new_property_method method method imitate node_fraction method return node fraction preserved backbone method take two input original backbone graph return computed property value conclusion conclusion netbone powerful free open-source python package offer variety statistical structural method extracting network backbone filter meet use case comparison framework standout feature enables user compare backbone wide range evaluation measure five experiment conducted paper illustrate wide range possible scenario analyzed using netbone first experiment showcase comparison framework assist evaluating backbone extraction method comparing various topological property second experiment highlight framework could aid user determining appropriate fraction threshold extracting backbone third experiment illustrates user evaluate distribution property value extracted backbone fourth experiment introduces consensual backbone user create unlimited combination backbone technique finally fifth experiment illustrates user integrate backbone extraction method custom evaluation measure comparison framework overall comparison framework provides user valuable tool comparing backbone extraction method current developmental phase primary focus integrating classical backbone extraction method unweighted weighted network package however many situation well described bipartite network example social network one connect user event recommendation system user linked item converting bipartite graph static network projection remove important information tumminello neal others proposed backbone extraction technique specifically designed bipartite projection address limitation key objective extend netbone package incorporating specialized approach another crucial extension concern temporal network indeed aggregating network snapshot static representation entail substantial loss information lead conventional classical method weighted backbone extraction neglecting significant aspect underlying network kobayashi others introduced backbone extraction method temporal network response challenge consequently second goal enrich netbone package incorporating advanced technique lastly third major development direction aim expand scope netbone multilayer network believe extension provide comprehensive package enabling handling broader network analysis range data method section introduces data method used toy example three experiment evaluate backbone extraction method data subsection introduce network used experiment table report basic topological feature misérables misérables network node represent actor victor hugo novel connected appear chapter misérables novel edge weight denote number occurrence air transportation air transportation network node represent airport continental edge represent route airport edge weight correspond number passenger year table topological feature misérables air transportation network full size table method subsection present evaluation measure used experiment evaluate extracted backbone node fraction node fraction backbone represents proportion node retained original network edge fraction edge fraction backbone represents proportion edge retained original network weigh fraction weight fraction backbone represents proportion edge weight retained original network average degree average degree sum degree network node divided number node network density density ratio edge present network maximum number edge network contain reachability reachability quantifies connectivity pair node network defined fraction node pair communicate read aligned n-1 i\ne aligned number node path exists node =0\ otherwise reachability value range pair node communicate network reachability becomes r=0\ mean node isolated two-sample kolmogorov–smirnov two-sample kolmogorov–smirnov test test allows testing whether two sample follow distribution simply put statistic 2-sample test greatest distance sample cdfs cumulative distribution function thus kolmogorov–smirnov statistic given aligned aligned represent cdf two sample number observation first second sample respectively
introduction sequential pattern mining spm one fundamental tool many important data analysis task web browsing behavior analysis find sequential pattern whose support specified threshold data analyst make accurate prediction analyzing frequent sequential pattern since sequential data often contains sensitive information directly mining frequent pattern raise user concern privacy perspective shown fig given sequence database suppose support threshold get frequent sequence pattern executing spm algorithm observing output frequent sequential pattern frequency attacker derive sensitive data individual user based background knowledge thus privacy leakage may occur therefore crucial sequence data analysis understand protect privacy sequence pattern mining figure example sequence pattern mining privacy leakage full size image early research frequently used cryptography k-anonymity technique address privacy problem spm however shown vulnerable many privacy attack provide sufficient protection including background combination attack differential privacy popular data privacy model recently paid close attention researcher industrial community differential privacy provide stronger privacy guarantee early privacy model perturbing sequence pattern mining algorithm random noise according differential privacy even attacker acquires background knowledge except attack target infer sensitive information individual user recently several differentially private sequential pattern mining solution designed based horizontal algorithm e.g apriori perfixspan example bonomi proposed differentially private mining scheme based perfixspan algorithm first constructed model-based prefix tree mine prefix candidate set substring pattern refined frequency substring pattern successive phase reduce perturbation noise proposed differentially private spm scheme based apriori-based algorithm perturbed frequency random noise satisfy differential privacy promote accuracy private mining proposed shrinking long sequence filtering invalid candidate pattern based sampling database dp-solutions provide high efficiency accuracy providing high level privacy reason summarized follows low efficiency horizontal algorithm contain many database scan prefix-projected database construction private processing need designed scan construction reduces efficiency low accuracy lower accuracy caused two factor first one candidate generated private mining result lower accuracy amount noise must proportionate number candidate refined sampling error exist calculating frequency pattern perturbing lower accuracy practical available mining scheme provide high privacy level ensuring efficiency accuracy existing solution achieve objective time therefore attempt design differentially private sequence pattern mining scheme high efficiency utility providing high level privacy far know two type non-private spm algorithm horizontal mining algorithm vertical mining algorithm .the former work characterized performing costly database scan projection database construction latter work characterized scanning original database create vertical format called idlist generating candidate pattern cross-join idlists vertical mining algorithm effective horizontal mining algorithm light advantage vertical mining algorithm attempt design private mining scheme based vertical sequential pattern mining algorithm make private mining satisfy differential privacy constraint designed random noise addition scheme combined vertical mining process improve accuracy designed differentially private hash map list called privhashmap record frequent co-currency item based sparse vector technique privhashmap used pre-pruning excessive invalid candidate sequence private mining pruning invalid candidate sequence noise needed maintain level privacy improving accuracy related work differentially private spm sequential pattern mining provides knowledge time risk privacy disclosure several differentially private sequence pattern mining scheme dp-spm proposed address privacy concern bonomi first proposed differentially private mining scheme based perfixspan algorithm first constructed model-based prefix tree mine prefix candidate set substring pattern refined frequency substring pattern successive phase reduce perturbation noise proposed differentially private spm scheme based apriori-based algorithm first designed sequence shrinkage technique reduce length sequence used statistical information sampling data set prune invalid candidate pattern improve accuracy contrast dp-spm method following work concentrate differentially private spm different constraint cheng proposed private mining scheme dp-mfsm maximum frequent sequence mining proposed differentially private sequence pattern mining algorithm time constraint proposed differentially private sequential pattern mining scheme considering time interval electronic medical record system supposed data manager trusted afrose employed local differential privacy protect privacy sequential pattern mining wang proposed several privacy-preserving scheme critical top-k pattern mining data stream non-private spm non-private spm algorithm divided two category mining algorithm based horizontal database format mining algorithm based vertical database format spm algorithm based horizontal database format apriori-based algorithm e.g aprioriall representative horizontal mining algorithm apriori-based algorithm candidate pattern generated according downward closure property original dataset scanned several time calculate support candidate pattern inefficient due multiple database scan large candidate pattern improved algorithm proposed improve efficiency prefixspan prefixspan explores prefix projection reduce effort candidate subsequence generation also belongs horizontal algorithm however efficiency also bottleneck due multiple construction prefix-projected database spm algorithm based vertical database format vertical mining algorithm proposed solve problem low mining efficiency caused multiple data scan spade representative vertical mining algorithm efficiency vertical algorithm improved eliminating database scan however many cross-connection operation vertical list also result lower mining efficiency work proposed several improvement strategy address issue preliminary differential privacy definition differential privacy output randomization algorithm neighboring sequence datasets s'\ satisfies following constraint aligned -\varepsilon aligned said -differentially private arbitrary subset output domain called privacy budget used control privacy level smaller represents stronger privacy protection s'\ represent neighboring sequential datasets mean definition sensitivity let denote sensitivity query function calculated follows aligned max_ aligned equal maximum l_1\ norm distance s'\ sub-index represents l_1\ norm mean sum magnitude vector space definition laplace mechanism let denote query function sequence dimension denotes sensitivity let random noise vector _i=lap =\delta q/\varepsilon\ probability density function x/\lambda 1/2\lambda exp -|x|/\lambda add aligned aligned said satisfy -differential privacy theorem sequential composition let m_1 m_n\ randomized algorithm m_i\ provides _i-\ differential privacy 1\le i\le sequence m_i provides -differential privacy vertical sequence pattern mining sequence database let u=\ p_1 p_2 p_l\ denote universe set item p_i\ represents single item let p_i p_j p_k\ denote unordered set distinct item sequence i_1 i_2 i_n ordered arrangement itemsets i_k 1\le shown fig sequence database consists set sequence s_1 s_2 s_n\ first sequence s_1\ contains five itemsets p_1 p_2\ p_3\ p_6 p_7\ p_7\ p_5\ frequent sequence pattern support sequence pattern pattern_i\ exceeds certain threshold pattern_i\ frequent sequence pattern frequent pattern length called frequent -sequence pattern vertical sequence database format vertical database format entry represents item indicates list sequence item appears sid timestamps appears tid structure named idlist associated pattern support larger pattern quickly calculated performing join operation idlists smaller pattern vertical mining process idlists single item created scanning database idlists larger pattern subsequently obtained conducting join operation idlists smaller pattern figure show example vertical database format according sequence database fig taking construction idlist p_1\ example s_1= p_1 p_2\ p_3\ p_6 p_7\ p_7\ p_5\ tid p_1\ appears s_1\ therefore first entry idlist s_1 s_2= p_1 p_4\ p_3\ p_2\ p_1 p_2 p_5 p_6\ tid p_1\ appears s_2\ 1,4\ therefore second entry idlist s_2 1,4\ s_3= p_1\ p_2\ p_6\ p_5\ tid p_1\ appears s_3\ therefore third entry idlist s_3 s_4= p_2\ p_6 p_7\ tid p_1\ appears s_4\ none therefore fourth entry idlist s_4 figure vertical format sequence database idlists single item full size image basic idea algorithm sequence pattern mining algorithm must randomized guarantee data privacy scheme designed based vertical sequence pattern mining algorithm achieve high efficiency differential privacy employed perturb vertical mining algorithm make mining process satisfy -differential privacy straight solution designed follows perturb idlists candidate pattern according laplace mechanism based perturbed idlists calculate noisy support candidate pattern performing cross-join operation noisy idlists filter frequent pattern based noisy support minimum support threshold process noise required perturbation proportional sensitivity mining process inversely correlated privacy budget suppose maximum cardinality frequent sequence privacy budget divided equally iterative mining process thus budget allocated iteration suppose q=\ q_1 q_2 q_n\ query function private mining q_i\ represents sub-query number candidate -sequences iteration sensitivity q_i\ equal maximum number candidate -sequences therefore add lap noise idlists candidate -sequences iteration process satisfy -differential privacy iteration easily prove private mining process satisfies -differential privacy however sensitivity straight solution high result large amount noise required privacy protection privvertical improved algorithm proposed reduce high sensitivity privvertical consists three component construction privhashmap based sparse vector technology perturbation idlists infrequent candidate pruning based privhashmap satisfy -differential privacy privacy budget allocated follows budget construction privhashmap _1=\alpha budget remaining two component _2= 1-\alpha construction privhashmap based sparse vector technology many infrequent candidate generated private mining existence pattern affect accuracy non-private mining lower accuracy private mining infrequent candidate pruned early possible address issue privhashmap proposed purpose vertical mining process generating candidate -patterns based frequent i-1 -patterns generation style divided two type one -extension -extension suppose s=\ i_1 i_2 i_n\ sequence i_k p_j p_k i_x\ integer 1\le p_k lex p_j\ item p_k\ said succeed -extension otherwise p_j\in i_x\ p_k i_y\ integer 1\le item p_k\ said succeed -extension according sequence database fig single item extension item seen fig example p_2\ -extension item p_1\ p_2 p_3 p_5 p_6\ -extension item p_1\ privhashmap record extension item co-occurrence frequency single item used pre-prune infrequent candidate iterative mining process pruning infrequent candidate sensitivity reduced required noise lower thus accuracy improved implementation co-occurrence frequency information recorded n\times matrix large waste empty entry existence empty entry seriously affect candidate pattern filtering efficiency implemented co-occurrence frequency table hash table hashsets hashset corresponds item p_k\ extensive frequent co-occurrence item figure show example privhashmap figure example privhashmap full size image privhashmap constructed based original sequence data avoid possible privacy leakage construction perturbed laplace noise process sparse vector technique svt employed ensure accuracy providing high privacy level private construction implemented two step firstly perturb support threshold laplace noise lap 2/\varepsilon get noisy threshold secondly perturb frequency candidate 2-sequence r_2 laplace noise lap 4\cdot compare r_2 +lap 4\cdot noisy support output threshold r_2 +lap 4\cdot otherwise output threshold represents sensitivity private construction value equal number frequent 2-sequences way privhashmap constructed high accuracy high level privacy theorem construction privhashmap satisfies _1\ -differential privacy proof let represent query function frequency co-currency item a_i\ represents query function co-currency item neighboring sequence datasets s'\ prove get algorithm satisfies _1\ -differential privacy since s'\ neighboring sequence database get a_i a_i a_i +1\ let r=\ r_1 r_2 r_l\ represent output vector process r_i\ge r_i let represent query function number co-currency item =\delta _1/2 =\delta thus aligned =\int -\infty +\infty -\infty +\infty =\delta r_i a_i +l_ noise r_i\ge a_i +l_ noise dzd\delta =\int -\infty +\infty =\delta -\infty +\infty =z-1 r_i a_i +l_ noise z-1 r_i\ge a_i +l_ noise z-1 d\delta -\infty +\infty =\delta -\infty +\infty r_i a_i -1+l_ noise z-1 r_i\ge a_i +l_ noise z-1 d\delta -\infty +\infty =\delta -\infty +\infty r_i a_i +l_ noise z-1 r_i\ge 4\delta a_i +l_ noise d\delta -\infty +\infty =\delta +\delta 4\delta -\infty +\infty r_i a_i +l_ noise r_i\ge a_i +l_ noise d\delta =e^ +e^ +\delta 4\delta =\delta -\infty +\infty r_i a_i +l_ noise r_i\ge a_i +l_ noise d\delta =e^ aligned perturbation idlist vertical mining candidate -patterns generated performing cross-join idlists frequent k-1 -patterns satisfy differential privacy idlists perturbed random noise privacy protection shown fig idlist pattern consists header node several entry header node record number entry budget allocated entry represents list sequence appears sid timestamps appears tid perturbation idlist follows following two step first perturb true entry number allocated budget second perform consistency adjustment idlist according noisy number step candidate -sequence magnitude noise required perturbation idlist lap m\cdot f_k/n\varepsilon represents maximum cardinality frequent pattern f_k\ represents sensitivity size sequence database step consistency adjustment performed follows perturbation idlist divided two type positive perturbation negative perturbation fig see dummy entry inserted noisyidlist perturbation positive dummy entry composed sid value tid value ensure mining accuracy sid value dummy entry different existing sid value way accuracy affected generating candidate pattern performing cross-join idlists perturbation negative consistency adjustment implemented deleting several entry idllist according noisy count figure example idlist perturbation full size image candidate pruning based privhashmap vertical mining iteration process recursive process candidate -sequences generated performing cross-join noisyidlists frequent k-1 -sequences meanwhile infrequent candidate pattern pruned based privhashmap pruning rule follows let a_i\ a_j\ represent two frequent k-1 -sequence pattern a_i a_j common prefix a_i\ a_j\ extension item last item a_i\ last item a_i -extension item -extension item privhashmap retained candidate -patterns set otherwise filtered candidate -pattern retained candidate set perturb idlist magnitude noise perturbation lap m\cdot f_k/n\varepsilon based noisyidlist candidate -patterns support threshold frequent -patterns filtered sensitivity query recursive mining f_k min t_k -|del_k|\ analysis follows private vertical mining recursive process let t_k\ represent candidate -sequences generated recursive process frequent -patterns filtered t_k\ according differential privacy magnitude noise proportional sensitivity inversely proportional budget suppose query function private mining q_1 q_2 q_m\ q_k\ represents query candidate -sequences iteration process sensitivity q_k\ calculated follows iteration process straight solution adding deleting one sequence upper bound affected candidate -sequences suppose maximum cardinality sequence maximum number -sequence pattern contained sequence let t_k\ represent candidate -sequences generated recursive mining sensitivity q_k\ f_k min t_k let del_k\ represent invalid candidate -patterns pruned t_k\ based privhashmap pruning invalid pattern sensitivity q_k\ f_k min t_k -|del_k|\ pruning infrequent candidate magnitude noise reduced overall algorithm description algorithm describes construction privhashmap firstly perturb true support threshold 2/\varepsilon _1\ line estimate number frequent co-occurrence item _1/4\ line next item p_i\ find s-extension item i-extension item calculate co-occurrence frequency record privhashmap_i\ privhashmap_s\ respectively line 3–12 traverse privhashmap line privhashmap_i\ privhashmap_s\ perturb true support _1/4\ line noisy support noisy support threshold add retained privhashmap line 15–16 otherwise discard continue traverse privhashmap_i\ privhashmap_s\ element privhashmap traversed line 17–20 last return privhashmap line algorithm describes private vertical mining process privvertical consists three step first construction privhashmap second perturbation idlist third generating pruning candidate pattern based noisy fs_1\ make algorithm satisfy -differential privacy divided two part _1\ _2\ _1\ used construct privhashmap algorithm line remaining budget _2\ used private vertical mining allocate _2/m\ recursive process construct noisyidlist 1-sequences _2/m\ find fs_1\ algorithm line 3–4 recursively call process enumerate pruning generate prune candidate pattern get frequent -patterns algorithm line 5–6 algorithm describes process enumerate pruning pattern a_i\in fs_k\ add output algorithm line 1–2 pattern a_j\in fs_k\ merge a_i\ a_j\ algorithm line 3–4 add t_k\ algorithm line 5–7 pruning invalid pattern t_k\ based privhashmap algorithm line 8–10 pattern retained candidate set construct noisyidlist calculate frequent -sequence pattern fs_k\ based noisyidlist algorithm line let fs_k\ input parameter recursively call algorithm mine frequent —sequence pattern algorithm line complexity analysis algorithm describes overall scheme consists algorithm algorithm let represent dataset size number sequence let max represent max cardinality sequence max|s| ^2\ number combination different co-occurrence item thus complexity algorithm n\times max|s| suppose max length frequent pattern max denotes number frequent k-sequence pattern ^2\ extension number generating candidate k+1 -patterns based fs_k\ let k+1 denote candidate k+1 -patterns thus complexity algorithm ^2+t_ k+1 complexity algorithm n\times max|s| ^2+p_ max ^2+t_ k+1 algorithm low complexity reduce complexity algorithm construct privhashmap filter excessive candidate pattern reducing size candidate perturbation also reduced thus low complexity algorithm ensured detailed running time evaluation seen efficiency evaluation experiment section privacy utility analysis privacy analysis theorem private vertical mining satisfies _2\ -differential privacy proof suppose maximum cardinality frequent pattern private vertical mining process consists recursive sub-processes let q=\ q_1 q_2 q_m\ represent query function process q_k\ represents query function recursive process represents frequent pattern set fs_k\ represents frequent -sequence pattern set f_k\ represents sensitivity recursive process demonstrate following equation true get private vertical mining satisfies _2\ -differential privacy aligned -\varepsilon -0.3cm aligned detailed analysis follows aligned array k=1 exp -\frac n\varepsilon f_k exp -\frac n\varepsilon f_k k=1 exp -\frac n\varepsilon f_k k=1 exp -\frac n\varepsilon f_k exp exp array aligned proof first inequality inferred triangle inequality theorem second inequality inferred sensitivity definition f_k\ evidenced token following equation hold aligned exp -\varepsilon aligned therefore private vertical recursive mining algorithm satisfies _2\ -differential privacy theorem privvertical satisfies -differential privacy proof privvertical consists two component one private construction privhashmap private vertical mining according theorem private construction privhashmap satisfies _1\ -differential privacy according theorem private vertical mining satisfies _2\ -differential privacy according theorem privvertical satisfies _1+\varepsilon -differential privacy since =\varepsilon _1+\varepsilon _2\ privvertical satisfies -differential privacy utility analysis theorem least probability 1-\beta\ upper-bound error noisy frequency true frequency frequent -patterns m\cdot f_k n\varepsilon ln\frac f_k proof suppose candidate -sequence true frequency since perturbed noise true frequency lap m\cdot f_k/n\varepsilon probability error true frequency noisy frequency 2\cdot n\varepsilon 2m\cdot f_k +\gamma +\infty exp -\frac x-c n\varepsilon m\cdot f_k exp -\gamma n\varepsilon m\cdot f_k recursive mining process since number perturbed candidate -patterns f_k\ union upper bound probability exp -\gamma n\varepsilon m\cdot f_k =\delta exp -\gamma n\varepsilon m\cdot f_k thus m\cdot f_k n\varepsilon ln\frac f_k experimental result conduct experiment evaluate utility efficiency privvertical algorithm implemented java comparison experiment include following comparison algorithm prefix representative privacy-preserving scheme based perfixspan implemented perturbing prefix tree privapriori representative private mining scheme based apriori-based algorithm two method representative horizontal mining algorithm differential privacy compared privvertical vertical mining algorithm differential privacy metric adopt following metric measure utility f-score -score used measure utility private mining result definition f-score follows aligned f-score 2\times precision\times recall precision recall aligned precision=\frac fs| recall=\frac fs| noisy frequent sequence pattern private mining scheme original frequent sequence pattern no-private mining scheme relative error used measure error actual support noisy support defined follows aligned avg_ x\in sup_x^ -sup_x sup_x aligned sup_x\ denotes true support sup_x^ denotes noisy support running time used measure efficiency algorithm datasets real datasets used experiment msnbc kosaarak record url category visited user time order click stream data respectively datasets obtained spmf website detailed information seen table number record dataset number distinct item max| avg| denote maximal average record length respectively table detailed information datasets full size table effect utility figure show parameter affect accuracy three algorithm figure effect utility full size image general privvertical performs better privacy level main reason follows privvertical prune many invalid candidate pattern private mining sensitivity reduced noise required also reduced although privapriori reduces sensitivity shrinking sequence pruning invalid candidate pattern exists sampling error private mining prefix prefix tree reorganize sequence database projection technique calculate noisy support pattern contains reorganization error result low accuracy increase privacy level decrease f-score increase decrease reason follows higher parameter lower privacy level lower privacy level mean required noise lesser improving accuracy compared msnbc utility kosarak higher reason may candidate pattern kosarak sparse number candidate pattern relatively small pruning strategy effective effect pruning strategy utility evaluate effective pruning strategy based privhashmap utility section figure effect pruning based privhashmap utility full size image private vertical mining scheme without candidate pattern pruning named straightsolution fig see sensitivity reduction rate msnbc private mining achieves 74–78 reduction rate kosarak achieves fig compared straightsolution privvertical greatly improve utility main reason sensitivity reduced noise required decrease efficiency evaluation figure show pruning strategy based privhashmap affect efficiency see privvertical performs better straightsloution pruning invalid candidate pattern size candidate pattern set lower way take time make private processing candidate pattern thus running time reduced increase efficiency two scheme decreasing candidate pattern space becomes smaller figure effect pruning based privhashmap efficiency full size image conclusion study analyzed existing work afford private sequence pattern mining scheme high level privacy achieving high utility efficiency first reason low efficiency horizontal mining style second reason low utility caused many candidate pattern generated private mining address issue privvertical private vertical sequential pattern mining scheme proposed first time high efficiency attained reducing scanning time database private mining process implemented perturbing non-private vertical mining algorithm differential privacy utility enhanced noise required level privacy implemented two strategy first designing privhashmap private co-occurrence hash map list designed based sparse vector technology used filter invalid candidate pattern subsequent private mining process therefore magnitude noise required privacy protection reduced secondly noise addition scheme vertical mining algorithm designed improve mining efficiency satisfying differential privacy constraint formal theoretical analysis upper bound utility privvertical given privacy bound privvertical also proved compared state-of-art method experiment verified privvertical higher accuracy efficiency privacy budget laplace noise required perturbing support candidate pattern reduced greatly experiment candidate reduction rate two real datasets achieves 74–98 greatly improves utility private mining experimental result also demonstrated pruning strategy based privhashmap affect efficiency pruning invalid candidate pattern size candidate pattern set lower way take time make private processing candidate pattern thus running time reduced future work privvertical applied practical problem product recommendation biomedical data analysis another possible future work may also include testing proposal using practical datasets metric related quality
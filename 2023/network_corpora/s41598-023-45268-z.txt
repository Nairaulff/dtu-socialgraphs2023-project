introduction lepelley louichi smaoui state consequently possible analyze four candidate election total number variable possible preference ranking hope development algorithm enable overcoming difficulty. hope fulfilled previous version normaliz connection symmetrization suggested schürmann possible compute volume ehrhart series many voting event four candidate election see far ehrhart series concerned yet offer progress volume computation already substantially improved descent algorithm described example normaliz used voting theory computation independent author found purpose paper present precise probability computation five candidate election assumption impartial anonymous culture iac made possible normaliz implementation lawrence algorithm connection rational polytopes social choice established independently solution four candidate quest proposed example similar much challenging computational problem performing precise computation five candidate election wide open various author used well known monte carlo method order perform computation five candidate fundamentally method deliver approximative result without even clear bound error note method successful obtaining precise result four candidate case ineffective five candidate case due huge leap computational complexity implied increase dimension associated polytopes therefore different algorithmic approach needed order obtain desired precise result best knowledge present first precise result obtained computation five candidate precise mean either absolutely precise rational number result obtained using fixed precision mode normaliz desired precision set fully controlled user polytopes five candidate election dimension defined subpolytopes simplex spanned unit vector number inequality cutting subpolytope critical size parameter fortunately could manage computation inequality addition sign inequality hardware disposal although algorithm allows arbitrary number inequality cover condorcet paradox computable laptop minute borda winner loser paradox condorcet efficiency plurality negative plurality borda voting including runoff extension also compute probability configuration five candidate defined condorcet majority relation table show computation candidate demanding hardware memory computation time therefore consider major value new algorithm improves situation four candidate election considerably possible allow preference ranking type partial indifference moreover one run series parameterized computation four candidate like one find three candidate order illustrate possibility compute probability condorcet paradox presence voter indifference condorcet efficiency approval voting see sect indifference note potential application limited voting theory seen table new algorithm performing better dimension grows first family example normaliz computes lattice normalized volume rational arithmetic without rounding error numerical instability slight restriction always theoretically possible compute probability absolutely precise rational number fraction involved reach size unmanageable available hardware case normaliz offer fixed precision mode whose result precise error controlled bound set user contrast algorithm based explicit implicit triangulation polytope cone defined consideration lawrence algorithm generic triangulation dual cone make brief discussion available lawrence algorithm implementation limitation section implementation lawrence algorithm limitation order reach order magnitude necessary five candidate election one need fine tuned implementation outlined moreover largest computation need high performance cluster finish acceptable time section computational report give impression computation time memory requirement listing selected example computation report note done version 3.9.0 normaliz meanwhile succeeded version 3.10.1 without change lawrence algorithm version available http detail implementation performance previous version normaliz point reader challenging computational problem arising social choice voting scheme rational polytopes connection voting scheme rational polytopes based counting integral point latter subsection sketch connection general reference discrete convex geometry recommend interested reader may also consult basic assumption mathematics social choice existence individual preference ranking every voter rank candidate linear order example three candidate named capital letter aligned c\succ a\succ aligned candidate exist n=n preference ranking usually numbered lexicographic order extension possible allow indifference example see result profile election -tuple aligned x_1 x_n x_i=\ voters\ of\ preference\ ranking aligned thus election result three candidate may written following tabular form number voter ranking following want compute probability certain event related election scheme requires probability distribution set election result impartial anonymous culture iac assumes election result fixed number voter following denoted equal probability word equidistribution set voting profile fixed number voter marquis condorcet 1743–1794 leading intellectual france revolution already observed ideal election scheme fact distinctly manifested arrow impossibility theorem say candidate beat candidate majority aligned voters\ a\succ voters\ b\succ aligned necessarily unique condorcet winner beat candidate majority general agreement person largest common approval however condorcet realized need exist relation _m\ transitive minimal example profile phenomenon called condorcet paradox quantitative viewpoint ambitious goal find exact number election profile exhibiting condorcet paradox opposite given number voter large number gigantic much informative understand behavior k\rightarrow probability election result exhibit condorcet paradox since assume iac probability aligned k\rightarrow election\ results\ without\ cw\ voter all\ election\ results\ voter aligned crucial consequence iac event characterized system homogeneous linear inequality three candidate aligned +x_ +x_ +x_ +x_ +x_ +x_ +x_ +x_ aligned interested probability k\rightarrow standard argument measure theory allow tie replacement consider event defined candidate election system homogeneous linear inequality set election profile set n=n election profile x_1 x_n lattice point point integral coordinate positive orthant _+^n\ satisfying equation x_1+\dots +x_n=k\ real point positive orthant satisfying equation form polytope _k\ linear inequality whose validity defines cut subpolytope p_k\ illustrate assertion necessarily unrealistic fig figure subpolytope defined linear inequality full size image large number voter want find probability prob event iac given aligned prob =\lim k\rightarrow lattice\ points\ p_k lattice\ points\ aligned project _k\ orthogonally onto _1\ thus p_k\ onto p_1\ density roughly speaking projection lattice point converges therefore aligned prob =\frac vol p_1 vol aligned volume computation connection counting lattice point one lattice normalized volume vol giving volume _1\ choice prob vol p_1 difficult would take many page write linear inequality voting scheme event discussed following four candidate complete system contained inequality one must often fix role certain candidate play like condorcet winner probability must computed carefully may require inclusion-exclusion principle theoretical well computational viewpoint better consider cone defined homogeneous linear inequality prime object polytopes intersection hyperplane defined equation x_1+\cdots x_n= difficult see voting event realized voting profile positive probability proposition let subset voting profile defined strict homogeneous rational inequality nonempty probability iac proof clearing denominator one assume coefficient inequality integer let maximum absolute value x\in voting profile x'= m+1 well homogeneity easily checked also x'+e_i\in e_i\ i=1 -th unit vector parallel translation -x'\ map polytope spanned x'+e_i\ bijectively onto _1\ thus lattice normalized volume therefore orthogonal projection _1\ positive volume condorcet paradox five candidate election condorcet paradox introduced section voting scheme rational polytopes doe occur case two candidate draw excluded three candidate exact probability outcome condorcet winner iac first computed gehrlein fishburn four candidate first determined gehrlein five candidate computed full precision mode normaliz method presented section implementation lawrence algorithm limitation aligned p_\text =\frac aligned aligned a=760794547958864241496408591531018198021484884229346111658236615929935 aligned aligned aligned decimal notation decimal obtain aligned p_\text aligned order illustrate fixed precision mode normaliz compare exact result result obtained fixed precision decimal digit namely aligned p_\text aligned aligned a'\ =\,940806822471705430345490241646953090890822667067627278585558072925121\\ aligned aligned b'\ =\,125000000000000000000000000000000000000000000000000000000000000000000\\ aligned decimal notation decimal obtain aligned p_\text 0.75264545797736434427639219331756247271265813365410 aligned reader observe decimal notation last digit different error bound aligned 6572904\cdot 10^ -100 10^ -93 aligned size generic triangulation see section implementation lawrence algorithm limitation table mean using fixed precision mode normaliz sufficient many application save computation time significantly demanding hardware practical reason following use shorter decimal representation rational number full rational representation number available demand author decimal representation called rounded decimal first n-1\ printed decimal exact last decimal may rounded rule versus rule runoff condorcet efficiency common voting scheme election plurality rule candidate one count voter first place preference ranking winner candidate first place however many election one second ballot called runoff winner got vote half voter runoff two candidate left namely two top candidate first round typical example french presidential election ideal winner election condorcet winner one must ask probability plurality winner condition exists conditional probability called condorcet efficiency studied intensively gehrlein lepelley quality measure voting scheme another important question whether runoff real improvement probability winner first ballot also win second much doe condorcet efficiency increase runoff often discussed variant plurality negative plurality npr winner least disliked candidate defined least number voter placed last place preference ranking plurality one runoff make sense compute conndorcet efficiency probability first round winner also win runoff plurality negative plurality special case weighted voting scheme place preference ranking fixed weight every candidate counted sum weight preference ranking voter plurality first place weight place weight wheres negative plurality give weight -1\ last place addition two rule discus borda rule candidate give weight n-p\ place case four candidate plurality voting versus plurality runoff problem first computed loera dutra köppe moreinis pinto using latte integrale volume computation.the condorcet efficiency plurality voting first computed schürmann whereas condorcet efficiency runoff plurality voting given according obtained independently section additionally discus influence third ballot condorcet efficiency plurality negative plurality result five candidate listed table first line contains probability first round winner also win runoff three computation done using full precision mode normaliz next two line contain condorcet efficiency computed fixed precision mode normaliz practical reason included result rounded decimal table probability computed normaliz full size table table reproduce result condorcet efficiency three rule contained table 7.6 obtained using monte carlo method table result obtained monte carlo according full size table number relatively close confirms correctness algorithm involved however least decimal printed table exact number printed table exact decimal strong borda paradox borda paradox named chevalier borda studied strict borda paradox event voting profile plurality majority rank candidate opposite order sharp paradox strong borda paradox plurality winner condorcet loser reverse strong borda paradox occurs condorcet winner finish last plurality paradox discussed voting scheme every profile defines linear order candidate however point computing negative plurality shown section 2.5 plurality negative plurality dual strong borda paradox reverse strong borda paradox exchange role three candidate election detailed study family borda paradox contained case four candidate discussed section 2.5 according similar result obtained independently time computation strict borda paradox case five candidate seems reachable strong paradox computed fixed precision mode normaliz result rounded decimal large number voter probability strong borda paradox aligned 0.018125801480904 aligned probability reverse strong borda paradox aligned sgrev 0.019238302806489 aligned indifference want point normaliz implementation lawrence algorithm doe yield precise result five candidate election also extends range computation four candidate considerably allowing preference ranking partial indifference increase dimension related polytopes considerably demonstrate two example example allow possible type indifference except equal ranking candidate indifference equal ranking two candidate three possible position top middle bottom two group two equally ranked candidate equal ranking three candidate top bottom total one obtains ranking compared ranking without indifference substantial increase dimension assume ranking probability author allow weight type indifference example number voter linear order candidate twice number voter indifference weight easily realized system homogeneous linear equation normaliz input file first computation probability condorcet winner extended impartial anonymous culture eiac discussed candidate varying weight different type indifference requires inequality fix condorcet winner computation fast obtained value aligned 0.884041566089553 aligned probability existence condorcet winner eiac rounded decimal second example condorcet efficiency approval voting rule one additionally assumes every voter cast vote candidate first place preference ranking requires inequality namely mark make candidate winner approval voting consequently computation time going considerably see data condeffappr 4cand table normaliz obtains aligned 0.695293409282039 aligned probability exists finish first approval voting yield condorcet efficiency aligned 0.786494024661739 aligned approval voting assumption computation done using full precision mode normaliz three five candidate table give overview probability voting event three four five candidate far computed five candidate use shorthand npr plurality rule negative plurality rule borda rule introduced remaining abbreviation self explanatory better overview rounded probability decimal table probability voting event candidate full size table one observes probability decreasing three five candidate reflects increase number configuration defined voting profile condorcet efficiency probability borda paradox conditioned probability existence condorcet winner decreasing doe compensate decrease absolute probability view observation justified formulate conjecture series probability associated voting event table monotonically decreasing number candidate condorcet class voting outcome without tie imposes asymmetric binary relation candidate call condorcet configuration condorcet configuration also called dominance relation according evidently array n\\ 2\end array configuration permutation group s_n\ act set configuration permuting candidate call orbit action condorcet class n=4\ class probability discussed graph theoretical viewpoint condorcet configuration nothing simple directed complete graph labeled vertex i.e. graph labeled vertex without loop two vertex connected single directed edge graph also know tournament graph section present precise probability condorcet class iac first make presentation class needed order understand reduction critical made computation successful n=5\ condorcet configuration fall class action group s_5\ class condorcet winner condorcet loser linord cw4cyc cw2nd3cyc 3cyc4thcl cw3cyccl 4cyccl cyc stand cycle example cw2nd3cyc denotes class condorcet winner candidate second position majorizing remaining three latter ordered 3-cycle class known long time presumably davis oldest source source cardinality set class see class structured signature candidate count candidate majorized chosen candidate q=n-1-p\ number candidate majorizing chosen one graph theoretical language in-degree out-degree chosen node without signature excluded number signature must odd using observation one easily find class without named fig figure candidate signature colored red signature blue green indicates signature figure condorcet class without condorcet winner loser full size image cardinality class probability rounded decimal listed table table condorcet class cardinality probability full size table computed probability aesthetic reason sum excellent test correctness algorithm effective computation following reduction critical first seems one must use inequality representing relation _m\ five candidate addition sign inequality order compute probability single class configuration computation inequality currently reachable hardware disposal observation help reduce number inequality significantly easing computational load example linord computed inequality one exploit enough choose first two arbitrary order candidate third place probability linord known remaining class obtained condorcet paradox inequality cwand2nd cwandcl symmetry see class best relax direction edge count configuration occur one chooses direction relaxed edge proper choice relaxed edge one get away inequality 1,1 inequality remaining case surprise condorcet class positive probability fact theorem also see theorem 3.1 condorcet configuration realized voting profile proposition implies positive probability problem finding minimal number voter necessary realize given condorcet configuration even voting event largely unknown see asymptotic lower bound value four candidate election computed normaliz see remark implementation lawrence algorithm limitation lawrence algorithm based fact signed decomposition simplicies polytope primal space may obtained generic triangulation dual cone get simplex r_\delta\ primal space volume polytope primal space sum volume simplices r_\delta\ induced generic triangulation appropriate sign thus following formula used computing volume aligned vol vol r_\delta aligned mathematical detail refer reader filliman detail implementation normaliz described order compute generic triangulation normaliz following lawrence suggestion find generic element turn induces generic triangulation _\omega\ since almost inevitably unpleasantly large coordinate induced simplices r_\delta\ even worse rational vertex volume usually rational number large numerator denominator extreme arithmetical complexity make computation full precision sometimes difficult hardware disposal fixed precision mode volume vol r_\delta\ computed precisely rational number addition number may result gigabyte filling fraction therefore order make computation feasible precise rational number truncated predetermined set exact decimal digit typically digit error bounded t\cdot 10^ -100 size generic triangulation i.e total number simplices remark normaliz program vinci provided implementation lawrence algorithm using floating point arithmetic noted author floating point implementation numerically unstable point least one possible reason problem indicated discussion implementation lawrence algorithm alternating sum must evaluated using floating point arithmetic subtracting nearby quantity possible significant digit equal cancel severe limitation floating point arithmetic may lead phenomenon known catastrophic cancelation fact relative error involved evaluation single subtraction floating point arithmetic could produce completely meaningless digit problem visible already computing voting problem candidate becomes worse candidate consider problem comparing voting rule candidate presented detail sect 6.1 hot algorithm vinci computes precise associated euclidean volume 1.260510232743\cdot 10^ -25 time computation lawrence algorithm implemented vinci provides erroneous value 9.287423132835\cdot 10^ volume clear result provided vinci implementation lawrence algorithm may lack kind precision therefore doe make sense include paper benchmark different implementation lawrence algorithm vinci remark program polymake also implemented simplified version lawrence algorithm implementation restricted smooth case note smooth implies simple turn implies dual polytope simplicial boundary trivial triangulation polytopes appear voting theory smooth fact even simple thus implementation polymake lawrence algorithm compared normaliz implementation polytopes presented computational report selected example order give reader impression computational effort illustrate data several selected example except computation election candidate strictborda 4cand computation probability strict borda paradox election candidate discussed condeffappr 4cand condorcet efficiency approval voting candidate condorcet stand existence condorcet winner election candidate plurvsrunoff computes probability plurality winner also win runoff cwand2nd computes probability exists condorcet winner second candidate dominating remaining three condeffplurrunoff used compute probability condorcet winner exists finish least second plurality condeffplur computes probability condorcet winner exists win plurality case one make choice candidate certain role computation order define polytope computation table contains characteristic combinatorial data table combinatorial data full size table parallelized distributed volume computation implementation normaliz lawrence algorithm consists distinct step described effective computation step separated sometimes must separated run different machine computation time table wall clock time taken dell r640 system ram two intel™xeon™gold total core using parallel thread maximum table memory usage time parallelized volume computation full size table additional information computation table use bit integer step even step done bit integer strictborda 4cand condorcet volume first polytopes computed full precision whereas condeffplur condeffplurrunoff fixed precision used following rule thumb used estimate computation time smaller number thread one reduces number parallel thread one expect computation time factor reduction thread increase another factor selected example strictborda computable algorithm previously implemented normaliz example data table may compared data table recorded system data table show computation inequality currently reachable hardware disposal additional inequality added lead significant jump required ram memory exists limit system stage last two polytopes computed high performance cluster hpc computation time would become extremely long r640 despite high degree internal parallelization time condeffplurrunoff would still acceptable condeffplur would take several week instead step directly result step written series compressed file hard disk file contains certain number simplices number chosen user example 10^6\ simplices condeffplur need writing input file distributed computation condeffplurrunoff need compressed file collected transferred hpc osnabrück hpc node equipped ram amd epyc thread run node setup node ran instance chunk simultaneously every instance used thread openmp parallelization consequently input file could processed simultaneously condeffplur input file 10^6\ simplices one need ram computation time therefore volume condeffplur could computed even powerful system advisable choose type approach since one loses small amount data system crash happen amount memory used remains low also small computation profit fixed precision example step condorcet take 13.9 fixed precision 52.5 full precision
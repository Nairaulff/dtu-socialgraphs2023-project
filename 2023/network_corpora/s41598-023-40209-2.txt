introduction optimization problem large number application many field engineering design optimization structural parameter financial investment etc improve handling problem series global optimization algorithm developed traditional mathematical theory solution method divided deterministic optimization algorithm stochastic optimization algorithm stochastic optimization algorithm metaheuristic optimization algorithm high solution accuracy efficiency mainly including genetic algorithm inspired biological evolution simulated annealing algorithm gravity search algorithm gsa inspired physical principle particle swarm algorithm pso inspired animal population behavior artificial bee colony algorithm abc optimization problem become complex many metaheuristic optimization algorithm presented solve large-scale global optimization lsgo problem wild goose algorithm wga african condor optimization algorithm avoa australian wild dog optimization algorithm doa conscious neighborhood-based crow search algorithm ccsa starling murmuration optimizer smo diversity-maintained multi-trial differential evolution algorithm dmde enhanced moth-flame optimization algorithm using effective stagnation finding replacing strategy mfp-sfr etc compared metaheuristic algorithm abc advantage control parameter easy implementation outstanding exploration capability performs global local optimal solution search iteration therefore probability able find optimal solution greatly increased abc novel swarm intelligence algorithm simulating foraging behavior bee widely used field pid parameter optimization image processing numerical optimization structural design etc bingul compared pso abc find best performance parameter pid controller result robustness analysis show pid controller parameter adjusted abc stronger robustness internal external perturbation öztürk analyzed improved abc medical image processing proposed 2010–2020 hussain proposed improved abc copolymerization high-dimensional data showed combination new similarity measure optimized local search method significant progress achieved searching optimal cluster sagayam proposed hybrid one-dimensional hmm model abc optimize parameter observed state sequence improve performance result showed low recognition error rate proposed abc algorithm-based structural design optimization method fiber-reinforced plastic frp vessel result showed weight 32.98 frp fishing vessel could reduced 8.31 however traditional abc contains disadvantage slow convergence easy stagnation etc therefore many researcher delivered lot improvement measure enhance convergence speed exploitation capability abc zhang proposed improved abc algorithm unitary inheritance opi mechanism opiabc address fact solution abc varies one dimension wang presented selection method based radius neighborhood improves search phase detection bee enhances exploitation abc shi introduced concept queen bee propose new neighborhood search mechanism improved dimensional selection strategy realize conversion one-dimensional search full-dimensional search real bee colony onlooker bee employed bee different exploitation mechanism onlooker bee choose best one nectar source exploitation karaboga designed new search equation onlooker bee proposed quick artificial bee colony algorithm qabc accurately simulates behavior onlooker bee improves local search capability abc enhance global convergence speed gao introduced new search mechanism include logistic chaos mechanism backward learning improve algorithm mechanism control probability introducing two search equation xiao proposed new adaptive neighborhood search gaussian perturbation algorithm ngabc first used adaptive method adjust neighborhood applied global optimal solution guide search finally designed new gaussian perturbation solve shortage abc algorithm strong exploration capability weak development capability zhu proposed gbest-guided artificial bee colony algorithm gabc add influence global optimal solution neighborhood search equation improves exploitation capability algorithm zheng used cat chaos mapping increase diversity solution initial stage applied differential evolution improve search strategy designed adaptive scaling factor achieve dynamic search improve development efficiency convergence speed chouaib proposed multiple population abc based global local optimum mpgabc divide population multiple subpopulation introduces global local optimal solution search equation solution brajevi´ added shuffle variation operator hiring bee onlooker bee phase making algorithm get good balance global search ability local exploitation ability solve integer programming minimax problem zhao proposed novel method qabc search equation based idea quasi-avanti transformation enhanced exploitation capability algorithm introduced collaborative search matrix update position nectar source ensure randomness balance search even though improved abc algorithm produce satisfying solution solving optimization problem regard effectiveness efficiency slow convergence speed easy premature maturation still space improvement abc performance study novel chaotic neighborhood search-based artificial bee colony algorithm cnsabc proposed proposed cnsabc includes three novel mechanism chaotic mapping mutual exclusion mechanism neighborhood search mechanism compression factor sustained bee chaotic mapping mutual exclusion mechanism introduced better ergodicity solution space enhance global exploration neighborhood search mechanism compression factor presented enhance convergence efficiency local exploitation capability new type bee named sustained bee proposed improve ability explore optimal solution avoid appearance premature maturity degree three strategy work together improve performance global exploration local exploitation resulting faster convergence speed decent quality solution abc verify performance cnsabc confirm effectiveness proposed mechanism three set numerical experiment conducted selected benchmark function first set includes cnsabc abc algorithm single strategy improvement second set includes cnsabc five commonly used metaheuristic optimization algorithm abc pso gwo woa boa last set includes cnsabc five improved abc algorithm literature qabc sbabc mpgabc gabc ngabc addition tension/compression spring design problem speed reducer design problem used test ability cnsabc solving real engineering problem result verify dominant cnsabc regard convergence speed optimal solution search ability also indicate three proposed mechanism play guiding role enhancing abc algorithm rest section study arranged follows section improved abc algorithm introduces principle pseudo-code abc algorithm strategy cnsabc detail section experimental result analysis show three set experimental result comparing cnsabc algorithm analyzes effect improvement section cnsabc solving engineering optimization problem two engineering example problem verify practicality cnsabc solving practical problem section conclusion summarizes research illustrates future research direction improved abc algorithm traditional abc algorithm abc algorithm inspired foraging behavior honeybee foraging behavior bee shown fig colony three main type bee employed bee onlooker bee scout bee bee closely related location nectar source employed bee harvest nectar near initial nectar source share nectar information ef1 within hive dance area onlooker bee select better nectar source exploit ef2 nectar source nectar onlooker bee transform scout bee find new nectar source abc algorithm iterative process step algorithm follows figure honey foraging behavior full size image initialization nectar source abc multidimensional vector abc start search set randomly distributed initial nectar source generated using rand take value interval lower upper limit dimension total number nectar source number dimension rand uniform random number value interval employed bee phase employed bee associated nectar source performs neighborhood search vicinity associated nectar source turn produce new nectar source location generated using serial number current honey source serial number honey source random number within value interval phase employed bee compare original nectar source new one chooses better one develop return hive share information better nectar source bee onlooker bee phase onlooker bee evaluate known honey source select certain probability nectar source exploitation probability nectar source selection calculated using fit_ fit_ fit_ fitness value nectar source nectar source better fitness value likely selected follow bee exploit source update nectar location like employed bee better nectar source selected retention based greed criterion scout bee phase employed bee onlooker may keep taking nectar un-renewed nectar source therefore upper limit set number time nectar source exploited upper limit exploitation reached nectar source renewed source abandoned bee following transformed scout bee regenerate new source using proposed cnsabc bernoulli chaotic mapping mutual exclusion mechanism initial solution traditional abc generated using rand uniformly distributed random number belongs pseudo-random number however solving high-dimensional problem initial population generated way uniform enough therefore guaranteed get better population global search addition use rand search process reduces local search ability employed bee phase onlooker bee phase overcome shortcoming chaotic mapping mutual exclusion mechanism introduced generate initial population chaos mapping method mainly include logistic chaotic mapping bernoulli chaotic mapping among logistic chaotic mapping widely used however logistic chaotic mapping high probability taking value interval 0.1 0.9 uniformly traversed global optimization search process may lead reduce efficiency algorithm bernoulli chaos mapping uniformly distributed compared logistic chaos mapping bernoulli chaos mapping better traversal uniformity randomness chaos value distribution logistic chaos mapping bernoulli chaos mapping iteration shown fig figure chaos number distribution full size image bernoulli chaotic mapping expressed array 0,1 array range 0,1 range system chaotic state introducing bernoulli chaotic mapping mutual exclusion mechanism initial population generation equation becomes initial individual considered one best fitness shown mutual exclusion mechanism make search direction two opposite direction improve exploration capability i1j i2j i1j i2j pseudo-code bernoulli chaotic mapping shown fig figure pseudo-code bernoulli chaotic mapping full size image standard deviation initial population individual generated bernoulli chaos mapping mutual exclusion mechanism initial population individual generated rand counted value range generate 30-dimensional 50-dimensional 100-dimensional population individual respectively larger standard deviation generated initial population individual better initial population diversity standard deviation result shown table table standard deviation result full size table neighborhood search mechanism compression factor nature employed bee onlooker bee play different role bee colony main purpose employed bee explore nectar source onlooker bee exploit known nectar source however traditional abc algorithm neighborhood search way used employed onlooker bee simulate nectar collection behavior way lead limit exploration insufficient exploitation bee colony therefore balance exploration exploitation capability algorithm neighborhood search mechanism compression factor proposed improving search mechanism employed bee onlooker bee new neighborhood search mechanism employed bee focus expanding search range enhancing global exploration ability expressed onlooker bee focus improving exploitation ability local exploration obtain better solution shown best best mean mean mean iter^ 2z^ 1.5z^ cp\ adaptive compression factor calculated theoretical value range cauchy distribution calculated uniform random number value ranging calculated uniform random number value ranging 1.5 calculated iter number generation current iteration weight influence local exploration onlooker bee impact exploitation capacity onlooker bee test effect parameter search ability onlooker bee test performed 1.5 respectively test function f15 f25 colony size number iteration due random peculiarity intelligent heuristic algorithm may generate better worse solution anteriorly produced exploring new solution thus good select compare result statistical approach testing function algorithm run independently time result shown table table test result full size table shown table seen search formula onlooker bee appropriate therefore uniform random number value ranging calculated 6z^ ensure randomness exploration generation introduce bernoulli chaos mapping introduction improve capability local search sustained bee traditional abc algorithm colony three kind bee due mechanism scout bee bee upper limit exploitation lead bee may develop optimal solution give exploitation upper limit exploitation reached therefore new bee specie proposed continuously exploit current optimal honey source without upper limit exploitation called sustained bee sustained bee influenced global optimal solution develop new solution based current optimal solution update formula sustained bee shown iter iter rand best iter iter rand iter current optimal solution proposed variant abc study traditional abc algorithm combined three improvement including bernoulli chaotic mapping mutual exclusion mechanism neighborhood search mechanism compression factor sustained bee novel chaos neighborhood search-based abc algorithm cnsabc formed figure show pseudo-code cnsabc figure pseudo-code cnsabc full size image time complexity important tool determine computational complexity algorithm generally time complexity algorithm determined population size variable dimensionality fitness function proposed cnsabc population size dimensionality assuming parameter initialization time initialization solution time time complexity initialization phase shown o\left iterative process number iteration time calculate fitness value optimal individual time select better individual hire colony time replace last iteration individual employed bee phase time replace last iteration individual onlooker bee phase time replace last iteration individual scout bee phase time replace last iteration individual sustained bee phase time calculate weight time complexity employed bee phase shown o\left o\left o\left conclusion time complexity cnsabc calculated experimental result analysis part verify performance presented cnsabc comprehensive experiment conducted analyzed based experimental result obtained benchmark test function firstly benchmark test function presented strategy sect. improved abc algorithm tested individually confirm effectiveness improvement cnsabc compared five standard algorithm abc pso gwo woa boa finally five advanced improved abc qabc sbabc mpgabc gabc ngabc addition algorithm coded matlab 2020a run intel core i5-2400 cpu 3.0 ghz ram window computer benchmark function experiment test function proposed zhong luo gao zhu kwong karaboga akay used test effectiveness presented cnsabc test function include unimodal separable function unimodal non-separable function f10 f11 f12 f26 multimodal separable function f13 f14 f15 f16 f17 multimodal non-separable function f18 f19 f20 f21 f22 f23 f24 f25 test function shown table respectively specifically unimodal function applied test exploitation capability algorithm multimodal function applied test exploration capability table benchmark function full size table influence improvement point determine effectiveness three improvement strategy improvement strategy combined abc algorithm separately form three variant abc table indicates improvement strategy used combination abc indicates variant abc doe use improvement strategy fairness initial parameter used algorithm throughout testing process population size maximum iteration benchmark function tested time experimental result containing mean standard deviation maximum minimum value recorded table last row table indicates advantage disadvantage algorithm compared abc symbol indicate algorithm better worse equal comparison respectively table abc three improvement strategy full size table table experimental result different algorithm full size table comparing mean standard deviation table analyzed sustained bee bernoulli chaotic mapping mutual exclusion mechanism limited improvement abc performs poorly test benchmark function f11 f16 f25 neighborhood search mechanism compression factor stronger improvement abc cnsabc show stronger exploration exploitation three improved strategy work simultaneously benchmark function f13 f14 f15 f20 f21 f24 extremely close theoretical optimal value due fact value exceed display digit matlab thus decimal digit displayed performance algorithm test benchmark function f19 f23 extremely different addition comparison algorithm compared cnsabc nonparametric statistic wilcoxon test friedman test -values wilcoxon test abc cabc nabc sabc 1.5856e−07 8.3922e−09 1.3414e−10 1.6690e−08 respectively indicating remarkable distinction algorithm friedman test shown table mean-rank represents average ranking algorithm smaller value represent better algorithm performance conclusion three proposed mechanism including bernoulli chaotic mapping mutual exclusion mechanism neighborhood search mechanism compression factor sustained bee superiority improve performance aco table mean rank friedman test cnsabc comparison algorithm full size table comparison advanced original algorithm verify advantage cnsabc five commonly used metaheuristic optimization algorithm including pso abc gwo woa boa used comparison parameter different algorithm set population size maximum iteration benchmark function tested time parameter set based recommended value original manuscript literature mean standard deviation minimum maximum value result experiment counted table table indicate number benchmark function cnsabc better worse equal original algorithm number benchmark function original algorithm better worse equal cnsabc among benchmark function respectively table comparison result cnsabc algorithm full size table specifically result mean cnsabc get best result benchmark function f10 f12 f13 f14 f15 f19 f20 f21 f22 f23 f24 f25 f26 standard deviation cnsabc obtains best result function f10 f12 f13 f14 f15 f19 f20 f21 f22 f24 f25 f26 indicate cnsabc strong exploitation capability stability meanwhile cnsabc obtains optimal result minimum value among function f10 f11 f12 f13 f14 f15 f16 f18 f19 f20 f21 f22 f23 f24 f25 result indicates cnsabc best performance among compared algorithm figure show representative convergence curve subset benchmark function f10 f13 f15 f19 f25 allow intuitive comparison -axis convergence curve logarithm fitness besides f19 function result table seen cnsabc demonstrates excellent performance function test f12 f19 f25 f26 however worst performance test f16 f17 fig convergence curve show different characteristic different search strategy one slow convergence beginning iteration cliff-like decline convergence process first kind curve mainly reflected single-peaked benchmark function f1–f14 second kind curve mainly reflected multimodal benchmark function f15–f25 analyzing different type benchmark function cnsabc excellent performance convergence accuracy convergence process convergence curve first kind convergence curve reflecting cnsabc achieves well balance exploitation capability exploration capability comparison algorithm compared cnsabc nonparametric statistic wilcoxon test friedman test -values wilcoxon test pso gwo woa boa abc 7.2866e−04 5.4838e−11 3.4412e−11 5.3564e−15 1.2364e−07 respectively indicating remarkable distinction algorithm friedman test seen table mean-rank represents average rank algorithm smaller value wonderful performance algorithm figure subset benchmark function full size image table mean rank friedman test cnsabc comparison algorithm full size table comparison improved abc algorithm part performance cnsabc compared improved abc algorithm benchmark function test including qabc sbabc mpgabc gabc ngabc fair different algorithm contain parameter setting population size maximum iteration test benchmark function experimental result recorded table containing mean standard deviation minimum maximum value result obtained set experiment last row table indicate amount benchmark function cnsabc better worse equal algorithm number benchmark function algorithm better table term mean cnsabc obtains best result benchmark function f10 f11 f12 f13 f14 f15 f18 f19 f20 f21 f22 f23 f24 f25 term minimum value cnsabc obtains best result function f10 f11 f12 f13 f14 f15 f16 f18 f19 f20 f21 f22 f23 f24 f25 result indicate cnsabc wonderful performance term convergence accuracy figure show representative convergence curve subset benchmark function f10 f13 f15 f19 f25 table comparison result cnsabc improved abc algorithm full size table table cnsabc stronger improved abc algorithm whether single-peak benchmark function multimodal benchmark function also reflects exploration development capability cnsabc achieve well balance fig cnsabc outstanding superiority compared improved abc algorithm convergence curve show slow decreasing trend beginning iteration better fitness algorithm indicates cnsabc strong exploration exploitation capability attributed introduction three mechanism comparison algorithm compared cnsabc nonparametric statistic wilcoxon test friedman test -values wilcoxon test qabc sbabc mpgabc gabc ngabc 1.0921e−09 6.2631e−10 7.0176e−10 1.8958e−05 1.2600e−02 respectively moreover better result cnsabc also demonstrated friedman test table figure subset benchmark function full size image table mean rank friedman test cnsabc comparison algorithm full size table cnsabc solving engineering optimization problem tension/compression spring design optimization problem main objective engineering problem minimize mass tension/compression spring optimization constraint problem described follows shear stress surge frequency minimum deflection schematic diagram spring exhibit fig figure schematic view tension–compression spring design full size image problem three variable wire diameter mean coil diameter number active coil mathematical model described follows consider minimize subject gathered 71785x_ 4x_ 12566\left 5108x_ 140.45x_ 1.5 gathered 0.05 2.0 0.25 1.3 2.0 15.0 fairness cnsabc penalty function algorithm result shown table table show mean standard deviation minimum maximum value experiment cnsabc figure show adaptation convergence curve cnsabc computing tension/compression spring design best solution obtained cnsabc design variable .012192037027776 solving tension/compression spring design problem result show optimal weight compared epo sho gwo mvo sca epo improved hsca cb-abc i-abc greedy cnsabc increased 3.6735 3.8028 3.8356 4.87755 4.0727 3.6728 3.7739 3.8559 4.0630 3.8392 3.7770 3.3734 3.3734 3.3734 respectively cnsabc superiority performance algorithm table comparison result tension/compression spring design full size table table statistical result obtained cnsabc tension/compression spring design full size table figure convergence analysis cnsabc tension/compression spring design full size image speed reducer design optimization problem main objective engineering problem minimize mass reducer much possible design variable model face width tooth die number pinion teeth length first second shaft bearing diameter first shaft diameter second shaft design variable reducer reflected fig mathematical model described figure structural parameter full size image consider minimize aligned f\left 0.7854x_ 3.3333x_ 14.9334x_ 43.0934 1.508x_ 7.4777\left 0.7854\left aligned subject gathered 397.5 1.93x_ 1.93x_ 745\left 16.9 10^ 1/2 110x_ gathered gathered 745\left 157.5 10^ 1/2 85x_ 5x_ 12x_ 1.5x_ 1.9 1.1x_ 1.9 gathered gathered 2.6 3.6,0.7 0.8,17 28,7.3 8.3 7.3 8.3,2.9 3.9,5.0 5.5 gathered fairness cnsabc penalty function algorithm result cnsabc algorithm displayed table table show mean standard deviation minimum maximum value experiment cnsabc figure show adaptation convergence curve cnsabc computing tension/compression spring design problem best solution obtained cnsabc design variable objective function 2994.534574\ optimal value obtained speed reducer design problem cnsabc improved sho gwo mvo sca gsa aoa hsca cb-abc i-abc greedy 0.13605 0.2271 0.3757 0.2816 1.1909 1.8566 2.3828 0.4409 0.1149 1.1400 0.5205 1.3358e-09 1.3358e-09 2.2041e-08 cnsabc wonderful performance algorithm table comparison result speed reducer design full size table table statistical result obtained cnsabc speed reducer design full size table figure convergence analysis cnsabc speed reducer design full size image conclusion study chaotic neighborhood search-based abc algorithm cnsabc presented solve shortcoming traditional abc solving optimization problem firstly bernoulli chaos mapping mutual exclusion mechanism proposed increase diversity population strengthen global exploration capability secondly neighborhood search mechanism compression factor sustained bee presented improve local exploration exploitation capability avoid appearance premature maturity subsequently three group simulation experiment based benchmark function conducted compare cnsabc eight existing variant abc five commonly used metaheuristic optimization algorithm experimental result composed mean std. max min benchmark function verify dominant cnsabc optimal solution search ability detail overall performance cnsabc generally superior pso abc gwo woa boa function five variant abc cnsabc outperforms qabc sbabc mpgabc gabc ngabc benchmark function respectively finally cnsabc applied two engineering example experimental result show cnsabc effectively solve practical application problem although proposed cnsabc achieves excellent result term exploitation capability local exploration capability research cnsabc still initial stage many problem need study deficiency low computational efficiency future work focus enhancing algorithm efficiency exploring improvement direction example search strategy borrowed combined algorithm application extended practical application pid parameter optimization improved parameter search combined neural network
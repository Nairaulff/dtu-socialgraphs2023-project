introduction dedicated hardware performing quantum annealing currently available steadily improving independently proposed refined multiple time based principle adiabatic quantum computation agreed present formulation introduced kadowaki nishimori alternative digital algorithm simulated annealing use machine general purpose optimizers solve hard combinatorial optimization problem fact keep gaining interest industrial state-of-the-art machine considered d-wave device composed set physical qubits connected physical link pair qubits directly connected topology given formally described graph one vertex qubit one edge physical link device able solve instance following ising spin glass ground state problem probabilistic way aligned s_i s_j i\in b_i s_i s_i +1\ aligned instance programmed machine setting bias b_i\ spin i.e magnetic field site coupling edge i.e coupling strength spin described literature resolution carried quantum processing unit qpu adding time-dependent quantum tunneling hamiltonian corresponding schrödinger equation solved time-dependent hamiltonian resolution process approximates tunneling dynamic system different eigenstates np-hard ising model equivalent quadratic unconstrained binary optimization qubo considers quadratic function minimized variable value restricted 0,1\ domain principle transformation among two model straightforward spin s_i\in +1\ binary variable x_i\in 0,1\ related simple equation s_i 2x_i x_i s_i+1 variety constrained combinatorial optimization problem currently solved qubo relaxation digital machine traditional method extensively studied engineered operation research community process solving constrained combinatorial optimization problem quantum annealing instead still matter research requires several transformation step summarized schema fig first problem transformation qubo requires modelling choice affecting quality solution constraint relaxed replaced penalty term objective function representing amount violation multiplier penalty must set second continuous integer variable encoded binary variable third quantum annealing d-wave machine considered interaction graph variable qubo must match graph machine mapping obtained so-called minor-embedding np-hard problem machine may yield different result problem distinct mapping indeed principle advantage quantum annealing software running digital machine huge recent investigation prof practice former produce better computational result latter unless embedded subroutine problem-specific algorithm one reason arguably constraint feasibility guarantee solution produced solving unconstrained qubo satisfy constraint original combinatorial optimization problem compliance checked execution restored processing needed best knowledge approach proved able directly exploit characteristic quantum annealing so-called sample persistence first introduced simulated annealing identifies variable whose value persistent throughout repeated independent cycle annealing variable candidate fixed persistent value remaining one said form core difficult variable becomes subject search intensification work benchmark performance bare qpu d-wave advantage qpu solving qubo formulation derived constrained combinatorial optimization problem main focus design specific algorithm rather identifying technique suited improve computational method whose structure match pattern fig case study choose cardinality constrained quadratic knapsack problem cqkp extends qubo minimal way including one inequality one equality constraint experiment four reformulations cqkp qubo restrict experiment instance cqkp whose interaction graph embedded d-wave qpu machine propose comparison two step framework depicted fig grey box figure first ass computational result solving qubo reformulation cqkp term execution time quality solution goal test advantage given d-wave general purpose solver qubo formulation derived constrained combinatorial optimization problem compare performance d-wave two traditional approach state-of-the-art general purpose solver based mathematical programming gurobi 9.5 simulated annealing algorithm using open-source cpu implementation provided d-wave second evaluate goodness value extracted via sample persistence solution provided d-wave goal test advantage use d-wave general purpose method extract useful information solution qubo solve original cqkp compare information provided ad-hoc measure cqkp paper structured follows first present related work following section describe mathematical model cqkp four reformulations qubo present experimental set-up result last section conclusion drawn figure schema qubo-based heuristic framework solve constrained combinatorial optimization problem full size image related work benchmarking several benchmarking work d-wave quantum annealing processing unit present literature jünger provide seminal work benchmarking provide experimental comparison resolution max-cut problem d-wave 2000q version qpu qubits preceding advantage branch-and-cut semidefinite programming algorithm ad-hoc heuristic tailored grapth qpu sake fairness consider instance fit graph quantum hardware so-called chimera graph i.e need embedding experiment d-wave able provide black-box set-up solution near ground state energy optimality gap however traditional heuristic tailored chimera graph performed better d-wave term quality execution time work replicated advantage machine qubits doe consider constrained problem requiring embedding solved d-wave oshiyama ohzeki compare performance several class problem four qubo solver d-wave hybrid solver service toshiba simulated bifurcation machine fujitsu digital annealer traditional simulated annealing algorithm experiment showed mixed outcome clear winner three quantum-inspired solver sometimes worst performance traditional simulated annealing algorithm moreover consider performance bare qpu d-wave rather resolution service provided d-wave hybridizing qpu traditional approach whose detail known end-user several work focus comparing different version d-wave qpu different quantum-inspired solver without considering traditional solver willsch compare d-wave 2000q successor d-wave advantage exact cover problem test consider increasing instance size increasing density node connection advantage outperforms 2000q largest problem term solution quality execution time 2000q provides better solution problem sparse connection small size huang compare d-wave advantage fujitsu digital annealer three combinatorial optimization problem author experiment decomposition instance size greater hardware limit providing schema based block-structure problem formulation conclusion author state annealers provide good solution instance small size sparse connectivity struggle facing large size dense instance hence decomposition algorithm needed improve solution quality reach feasibility codognet present preliminary performance assessment d-wave advantage d-wave hybrid software resolution constrained optimization problem concluding current generation quantum annealers yet able deal constrained problem must embedded hybrid algorithm qubo formulation lucas provides seminal work design optimization algorithm inspired adiabatic quantum presenting ising formulation many np-hard problem glover present didactic survey qubo formulation combinatorial problem theoretical background transform fully connected interaction quadratic term linear term present literature resulting reformulation traditional counterpart lagrangian relaxation constraint latter need search best lagrangian multiplier hence need iterative process sampling update multiplier kuramata experiment lagrangian formulation quadratic assignment problem d-wave advantage author able find fair amount feasible solution sole qpu d-wave resort post-processing procedure restore feasibility none last two work include standard technique update lagrangian multiplier still need investigated comparison encoding integer variable binary variable investigated author compare binary unary one-hot encoding quadratic knapsack problem using fujitsu digital annealer author experiment increasing instance size take consideration rate feasible solution found finding unary encoding provide best result cardinality constrained quadratic knapsack problem cardinality constrained quadratic knapsack problem cqkp problem selecting exactly item set maximizing profit defined quadratic function weight selected item doe exceed threshold let set item select x_i\in 0,1\ binary variable item i\in value element selected otherwise formulation cqkp following aligned l_i x_i i\times x_i x_j aligned aligned s.t.~ a_i x_i aligned cap aligned x_i k\\ x_i 0,1\ aligned card constraint cap imposes limit total weight selected item a_i weight item i\in limit total weight selected item constraint card imposes select exactly item objective function maximizes profit selected item composed linear quadratic component l_i profit given selecting item i\in profit given selecting item together matrix symmetric qubo formulation cqkp cqkp formulated qubo relaxing constraint cap card adding penalty term objective function involving amount violation two standard reformulation approach considering sum square violation constraint formulated equality case penalty additional qubo term objective function considering sum linear violation constraint objective function traditional lagrangian relaxation approach case violation multiplied additional penalty value whose optimal value found order obtain best relaxed solution square violation equality constraint relaxation equality constraint card formulated qubo aligned qubo card x_i aligned inequality constraint cap first formulated equality introduction slack variable aligned a_i x_i aligned additional variable must encoded set binary variable comply qubo format choice encoding result different formulation experiment binary unary encoding slack variable unary encoding variable replaced binary variable unary coefficient resulting qubo aligned qubo unary cap a_i x_i s_j aligned unary coefficient result lower value quadratic coefficient however unary encoding requires high number additional variable highly degenerate formulation i.e value original variable encoded array b\\ v\end array combination variable s_j\ value binary encoding variable replaced a_i binary variable variable s_m multiplied coefficient c_m\ defined aligned c_m array 2^m m-1 a_i b\right 2^m array aligned resulting qubo aligned qubo binary cap a_i x_i c_j s_j aligned binary encoding requires limited number additional variable however use coefficient c_m\ result high quadratic coefficient hence requiring careful choice penalty multiplier qubo risk numerical issue take consideration one-hot encoding combine con unary binary formulation lead instance high number variable high value coefficient moreover also requires additional constraint must relaxed linear violation equality traditional lagrangian relaxation constraint relaxed adding violation objective function aligned linear card i\in x_i k\\ linear cap =\sum a_i x_i aligned qubo formulation cqkp qubo formulation minimize cqkp aligned cqkp i\in -l_ix_i i\times x_i x_j card card cap cap aligned card cap penalty multiplier violation corresponding constraint experiment formulation combination relaxation constraint binary formulation card cap relaxed qubo binary encoding slack variable cap unary formulation card cap relaxed qubo unary encoding slack variable cap qubo-card formulation card relaxed qubo cap relaxed linearly linear formulation card cap relaxed linearly experiment experiment instance literature characterized number item set set 100\ density non-zeros value quadratic profit coefficient matrix set 25\ 50\ 75\ 100\ ten instance generated combination density number item total instance chose limit experiment instance item d-wave advantage qubits embed clique maximum variable qubits link machine working however broken qubit link decrease size clique embedded moreover performance decrease size clique increase time traditional solver struggle size problem reach item unary formulation executed d-wave instance complete set size instance considered high fit d-wave machine setup solver following d-wave rule-of-thumbs set annealing time 100\ anneal offset 1-c length chain apply offset set value 0.2 chain strength value given uniform torque compensation function provided d-wave latter parameter penalty term multiplying violation equality chain copy variable binary unary formulation single embedding per instance computed qubo-card linear formulation three embeddings computed one number item experimental instance parameter gurobi left default value time limit second execution gurobi stop execution able prove optimality solution reaching time limit parameter left default value solving approach consider draw random many solution possible fixed amount time selecting best solution found particular set execution time equal execution time d-wave build solution pick item probability draw item i\in computed starting following measure aligned g_i l_i+\sum j\in a_i aligned refer potential gain probability draw given normalization potential gain aligned p_i g_i i\in g_i aligned key performance indicator take consideration two type key performance indicator kpi first common computational kpis consider total execution time value objective function yielded solver second specifically evaluate usefulness persistence value set solution yielded solver introduce kpi evaluate much information extracted set sample used search intensification general purpose resolution procedure let consider sorting variable qubo value x'\ variable heuristic solution iii value x^\star\ variable best known solution intuition small core binary decision variable often exists difficult set optimization problem thus requiring implicit enumeration procedure remaining one easy fix therefore core method combinatorial optimization consist building putting decision variable order confidence value optimal solution actually value taken x'\ promising fixing performed choosing first variable appearing beginning fixing value x'\ allowing search value remaining variable suitable optimization algorithm let index first variable sorting x^\star intuitively first position core algorithm fixing variable order would make error refer error point accordingly let error point obtained uniform random sorting let sorting obtained using persistence value sample solver solution cqkp case let x'\ defined setting variable lowest persistent value setting remaining variable let corresponding error point kpi quality particular formulation therefore consider probability random sorting performs better sorting induced solver formally define probability aligned array array array array aligned denominator count many way variable chosen random numerator count many subset variable value cqkp optimal solution core algorithm would correctly exclude search formally expression exact since case variable whose optimal value correctly fixed according parameter test instance probability becomes negligible nevertheless complete exact formula interpretation reported supplementary material using measure quality x'\ randomized method instead common metric specific solution implicitly evaluate impact various formulation core algorithm lower value better computing effort figure show comparison computational result sub-figures related qubo formulation fig binary formulation fig unary formulation fig qubo-card formulation finally fig linear formulation sub-figure scatter-plot one point per solver whose coordinate execution time -axis -axis contains relative difference value z_s\ qubo yielded solver minimum value qubo among solver i.e z_s s'\in solver z_s'\ s\in solver z_s'\ closer point origin plane better figure a–c also show magnification region plane containing point closer origin value averaged density value size set item instance combination density number item i.e value average result restrict case notice difference result provided different density quadratic coefficient matrix noticed minor difference arising different number item described supplementary material value coordinate point fig complete result reported supplementary material table s2.1 s2.6 computation time d-wave result set-up execution parameter hence fixed value influenced size instance solved long instance fit hardware graph set-up experiment d-wave execution range 0.2 0.3 second computation time doe include time perform minor embedding average embedding took 30\ second instance variable 100\ second instance variable 330\ second instance variable fair consider time comparison single embedding pre-computed used instance interaction graph case interaction graph always clique also take consideration result gurobi stopped second execution labelled gurobi 1sec figure best solution found drawing random many solution possible 0.25 second labelled random figure rationale compare goodness solver executed magnitude time d-wave clear pattern arise figure d-wave solution lie bottom-right plane traditional state-of-the-art mathematical programming solver gurobi lie either top left bottom left plane traditional heuristic lie left part plot traditional fast method random draw gurobi stopped second lie closer origin d-wave gurobi second time limit however value minimum solution found d-wave never lowest among solver finding match recent literature comparison different formulation i.e sub-figures fig allows one step beyond striking difference arise formulation inequality constraint cap relaxed qubo binary unary formulation cap relaxed linearly qubo-card linear formulation binary unary solution provided d-wave hundred time higher best solution found formulation qubo-card solution provided d-wave time higher best formulation linear close best worse binary unary gurobi either reach close time limit second execution recall setting gurobi stop execution able guarantee optimality solution found qubo-card formulation equality constraint card relaxed qubo gurobi able prove optimality solution reasonable time 0.6\ second d-wave able find good heuristic solution always able find solution close best binary unary formulation solution 11\ 15\ worse best qubo-card linear formulation solution either equal close best solution execution time highly related number variable binary qubo-card linear formulation take 1.5\ 0.9\ 0.8\ second respectively unary formulation instance average variable case variable case variable case take 12\ second average second execution gurobi suffices find good solution 3.5\ worse best binary case 10\ worse best unary case best solution qubo-card linear formulation random solution better d-wave binary unary qubo-card formulation still far best found worse time worse best linear case random solution worse d-wave solution 40\ worse best solution found discussion binary unary formulation additional complexity given encoding integer slack variable inequality cap required formulation qubo discussed previous section encoding different con lead higher complexity binary encoding increase value quadratic coefficient unary encoding increase number variable consider increased complexity result higher computation time gurobi able quickly find good solution struggling proving quality minor worsening solution higher computation time iii major worsening result d-wave whose solution hundred thousand time worse best solution found worse random drawn solution amount time qubo-card linear formulation quality d-wave solution improves still d-wave outperformed traditional solver indeed linear case constraint relaxed linearly gurobi able find proven optimal solution faster execution d-wave find heuristic solution summarizing scatter-plot analyzed independently result confirm literature formulation d-wave solution dominated least one traditional solver fixed execution time provided d-wave linked size instance solved promising feature may useful hardware bigger size improved accuracy becomes available instead comparing scatter-plots result insightful using simple linear penalty lead decrease order magnitude gap z_s s'\in solver z_s'\ s\in solver z_s'\ -axis previous analysis exploiting involved linearization technique focused problem size reduction without proposing comparison different formulation result show linear penalization approach useful overcome limit problem size actual impact quality solution produced d-wave qpu figure scatter plot execution time -axis relative difference objective function value z_s\ resulting solver minimum among solver -axis i.e z_s s'\in solver s'\in solver value averaged instance randam gurobi d-wave gurobi 1sec full size image sample persistence figure show boxplots value kpi first boxplot contains value kpi computed sorting provided ascending value ad-hoc potential gain measure second third block boxplots contain result sorting computed ascending mean value variable complete set solution created execution d-wave respectively take consideration result formulation testing d-wave consider unary formulation possible execute instance result latter scenario table complete result discussed supplementary material error point needed calculate computed using integer feasible solution x^\star\ given solving original instance cqkp gurobi time limit hour recall lower value better sorting provided ad-hoc measure potential gain yield best value median value 0.033 median value always worse qubo-card linear case able find optimal solution relaxation median value 0.311 0.106 respectively binary unary found solution 10\ worse best found median value kpi 0.089 0.068 respectively d-wave worse median value binary linear formulation respectively 0.182 0.087 median result qubo-card case instead 0.044 remarkably close value potential gain measure discussion introduction new kpi allows highlight insightful unexpected result d-wave qubo-card formulation comparable performance ad-hoc potential gain measure additionally d-wave generic unaware feature problem underlying objective function solving potential gain measure tailored cqkp problem perspective d-wave might used general purpose generator sorting exploiting persistence drive selection core decision variable difficult set figure comparison value different sorting method left right sorting increasing value potential gain measure sorting increasing average variable value solution repeated start sorting increasing average value d-wave sample orange bar represent median value detail 0.039 potential gain measure 0.089 sa- binary 0.068 sa- unary 0.106 sa- linear 0.311 sa- qubo-card 0.182 d-wave- binary 0.044 d-wave- qubo-card 0.087 d-wave- linear full size image conclusion work compared performance four qubo formulation cqkp three qubo solver focus bare qpu d-wave advantage comparison considered two aspect pure computational result goodness information retrieved sample persistence computational point view comparison among solver distinct formulation substantially match literature observation coming comparison different formulation provides interesting insight best performance provided d-wave given formulation inequality constraint cqkp relaxed linearly matching current best practice instead advises transform quadratic fashion explain phenomenon mainly follows linear relaxation allows avoid explicit addition slack variable constraint turn would require encoded set binary variable detail qubo resulting linear penalty much sparse interaction graph existing qpu architecture build limited number direct connection qubits connection physical one required chain interconnecting qubits needed coherence value known issue qpu d-wave advantage struggle find good solution facing highly connected qubos objective function model linear penalty sparse embedding qpu requires much qubits chain ultimately leading better performance analysis sample persistence introduced new kpi evaluate much information extracted sample persistence used search intensification general purpose resolution procedure insightful result following d-wave using linear relaxation instead quadratic one carry persistence information show experimentally representative optimal solution specifically match ad-hoc metric cqkp identifying core variable difficult set since ad-hoc metric exploit specific combinatorial feature cqkp d-wave doe latter applicable wider setting
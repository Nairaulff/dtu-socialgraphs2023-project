introduction council european union prioritized cybercrime related child sexual abuse csa considering severe crime according european police office child sexual exploitation material csem defined sexual abuse person year old producing image video abuse distributing content online darknets onion router tor freenet peer peer p2p network like edonkey instance messaging application telegram example environment interchange csem seems proliferate allowing pedophile share csem securely worth mentioning covid-19 outbreak interpol reported significant increase exchanging csem p2p darknet network online gaming messaging application csem producer might save content local computer machine least temporarily encrypted cloud server sharing consumer via peer-to-peer p2p network live-streaming lea inspects home analyze suspect computer police officer examine file hard drive inspected trying determine whether suspected pedophile stored csem computer task accomplished accurately within limited time popular approach identifying csem file use file digital signature known hash fortin steel explained process recognizing csem comparing hash new file database hash pre-calculates known csem file photodna software application developed microsoft create hash known medium file identify instance even modified slightly robust media-altering attack like resizing resizing drawing watermarking nevertheless major drawback hash-based technique inability detect new file without corresponding hash database furthermore use hashing technique requires accessing original file available case metadata i.e file name path machine learning algorithm designed overcome shortage learning csem naming pattern training set among potential technique recognize csem-related activity work focus file name information particular aim build file classifier decides whether given file csem related according name absolute path without addressing content scope paper however main limitation approach file name path doe carry indicative information content file name encrypted prevents reaching original name file nevertheless operates preliminary filter csem detection pipeline building automatic system challenging several reason first binary supervised algorithm requires training sample non-csem csem file however publicly available dataset latter class crawling child abuse material p2p network darknet considered illegal country therefore csem file name must legally obtained lea second file name typically text short length lead sparse representation sample owing massive number feature whereas instance represented third csem producer consumer tend invent personalized file naming style vocabulary abbreviation obfuscation acronym circumvent automatic detection tool example given file named yob0yxx exclamation mark could refer age boy letter replaced number zero hence high probability file related abuse four year old boy finally file name context using state-of-the-art contextual embedding model becomes inefficient bert showed superiority text understanding task like sentiment analysis typically absolute path file consists two component name absolute path propose two approach building figure first dedicated classifier component file path classifier fpc classify absolute path file name classifier fnc classify file name output fused single score approach fnc iterate sub-directories absolute path along file name figure two approach building file classifier system structure right show two standalone classifier approach work configuration fnc fpc classify file name path respectively output fused determine file category scheme left illustrates single-iterative classifier approach work configuration fnc used iterate sub-directories absolute path full size image relationship path name file name important note path name derived file name vice versa decision-making process choosing path name subjective directly linked specific name file contained within moreover worth considering even perpetrator individual encounter set file would likely select different folder name based various factor order file saved specific aspect wish highlight folder name easy retrieval later main contribution paper summarized follows propose framework classifying file csem non-csem based file name path without addressing content also extended text file name appending two additional intermediate representation suitable csem detection first novel binary representation distinguishes character block non-character block second orthographic feature capture variation type file name character knowledge orthographic feature yet used code file name text classification moreover built dataset 890k 5.9m unique file name path respectively making extensive dataset classifying csem finally trained tested file classification model real-world dataset officially collected seized hard disk csem producer consumer also integrated framework practical forensic tool used spanish lea 4nseek project detect csem remainder paper organized follows section related work present related work section methodology describes proposed classification methodology section dataset construction explains fnc fpc datasets created main feature section empirical evaluation experiment described result discussed section discussion finally section conclusion future work present conclusion future research related work several researcher investigated problem csem detection using file name panchenko attempted normalize file name using short message service normalization technique proposed beaufort trained support vector machine svm classifier normalized text obtained accuracy 96.97\ dataset peersman proposed framework called icop detect csem p2p network first stage classification pipeline dictionary-based filter constructed manually contained csem keywords used character n-gram size two four capture feature file name binary svm classifier later recent work used similar representation benchmarked classifier svm naive bayes owing lack public dataset task evaluated proposal using custom dataset observed svm classifier could identify csem file name recall rate 0.43 al-nabki compared use machine learning classifier svm use character n-grams term frequency-inverse document frequency tf-idf deep learning classifier depend convolutional neural network cnn specifically adopted two cnn model developed zhang kim model zhang best benchmarked cnn-based classifier obtained score 0.85 whereas machine learning approach using classifier obtained slightly lower score 0.84 pereira compared several machine learning deep learning model classifying file using file name path conducted experiment file path dataset unique storage system provided project vic international similar al-nabki found cnn character-based model proposed zhang achieved highest recall rate 0.94 file path classification problem treated branch url classification share similar characteristic term structure use concatenated word several researcher widely investigated topic sahingoz used url classification approach identify phishing website using url explored various feature extracted manually url benchmark several machine-learning classifier svm random forest used cnn feeding word-level token extracted url methodology section introduces two approach designing csem file classifier elaborates approach detail two standalone classifier approach approach two classifier file name classifier fnc file path classifier fpc classifier dataset training testing file name classifier fnc attempt enhance previous implementation explored literature enhancing file name representation training larger dataset section file name dataset building fnc involves three step text preprocessing feature extraction classification preprocessing attempt extend representation file name enriched original file name using three technique concatenated output form input next component classification pipeline table show preprocessing enrichment file name sample text preprocessing function replaces special character number respectively reduce sparsity feature instance file named yob0yxx transformed yob yxx technique beneficial detecting eliminating duplicate sample differ part name example folder seized computer could image named img01.png img02.png ... img100.png whereas name repeat information img .png however realized significant portion misclassified file text indicating category example sequence random character digit dj4md9f34se45ex8ch85yo qbdd35hmf93df5tvh4td exploring two three gram former example observe gram like 8yo might seem like indicator suspiciousness nevertheless looking full file name file name appears like random sequence character problem motivated enrich representation file name adding new binary representation replaces block character one zero anything else digit special character hence above-mentioned example represented 101010101.jpg example hot3yogirlonbeach mapped representation distinguish oscillation character non-character block input text additionally added orthographic feature map capital letter small letter number special character unique token respectively example file name like yob0yxx mapped ppppcccnccc table example preprocessing enriching representation file name full size table extending file name representation used character n-gram extract pattern two five consecutive character input file name build set token applied well-known tf-idf technique give higher weight score gram whose frequency higher file name simultaneously decrease weight gram frequently occur many file manner overcomes issue misspelled word personalized naming style file name table show example two five gram file name yob0yxx furthermore set threshold minimum maximum term frequency eliminate noisy token table example preprocessing enriching file name two five gram full size table lastly classification evaluated four machine learning classifier logistic regression random forest naive bayes gradient boosted tree gbt two char-based cnn model proposed kim zhang used model compare different implementation fnc classifier machine learning classifier operate previously extracted feature whereas cnn model automatically extract feature text case fnc binary classifier identifies whether file name csem file path classifier fpc supervised binary classifier determines whether given absolute path csem like fnc fpc consists three component file path preprocessing feature extraction classification preprocessing convert input path string replacing slash sign space next replace special character digit respectively finally capital letter used split text table illustrates preprocessing procedure table stage path preprocessing procedure full size table used feature extraction technique fnc n-grams character level described section two standalone classifier approach finally classification explored six classification model four machine learning classifier gbt two char-based cnn model fusing file name file path classifier section introduces aggregation prediction fnc fpc classifier single prediction value desired fusion strategy must sensitive potential csem file name path hence fusion strategy return classifier result highest csem confidence example given sample fnc predicts csem 20\ confidence 80\ otherwise fpc predicts csem 40\ confidence non-csem 60\ confidence case fpc confidence csem higher fnc one therefore result fpc final output fusion formally explains following procedure aligned =\left\ array fnc fnc csem fpc csem fpc otherwise array aligned refers classification result sample fnc csem fpc csem refer classifier confidence regarding csem class single-iterative classifier approach typically absolute path file comprised sequence folder name approach considers folder standalone file name previously implemented fnc model classification therefore entry path sub-directories including file name fnc called time entry classified entry reported csem complete path considered csem otherwise entry considered non-csem unlike majority voting approach technique susceptible suspicious sub-directory name mentioned input path prediction complexity approach proportional absolute path depth hence sample sub-directories complexity n\times dataset construction objective build classifier identify suspicious file via name absolute path without tackling content dataset list file name absolute path corresponding category either csem non-csem worth mentioning path could missing file resides root path hard drive e.g _g1rl.mp4 moreover file could either representative name indicate category posing/4yoboy/h0o0ot.jpg indefinite name doe carry information leading nature content img_01.png img_02.png 5t21764.jpg addition observed file path could shared among hundred file name file reside one directory hard disk table addition folder may empty hence path name without file name obtain unique sample split file name path obtain two list one unique file name unique file path table example file path dataset along corresponding file name full size table file name dataset non-csem class used dataset published national software reference library nsrl contains million file name randomly selected initial subset unique non-csem example preprocessing removing duplicate preprocessed sample see preprocessing procedure 3.1 number decreased regarding csem file name one spanish lea gave dump hard disk seized criminal computer list contained csem sample however preprocessing number unique instance decreased split preprocessed file name 80/20 training testing set respectively listed table file path dataset similar file name classifier file path classifier two class csem non-csem non-csem class gathered unique path eight computer machine host non-csem file preprocessing number reduced applies csem file path spanish lea provided file path collected six machine number reduced path unlike file name sample split training testing set fixed percentage file path machine share significant amount text root drive name username root folder name used file path six non-csem machine four csem machine training set remaining computer machine left testing file path two non-csem machine two csem machine table provides detailed information class size table description used dataset train fnc fpc full size table finally test performance file name file path model created binary dataset sample equally distributed class randomly sampled file path file name test set path file name created balanced synthesized test set fusing two set sample considered csem name path sampled csem instance otherwise tagged non-csem empirical evaluation experimental setting experiment performed intel core processor ram nvidia geforce gtx gpu processor running window classifier used scikit-learn toolkit cnns used open-source solution kera framework http machine learning classifier set threshold minimum maximum gram proportion 0.999 0.0005 respectively regarding machine learning classifier used following setting empirically classifier set parameter refers inverse regularization strength activated class weight parameter consider imbalance class training gbt classifier used ten estimator similar setting maximum depth remaining parameter left default value set scikit-learn library cnn model set input dimension activated early stopping five iteration without improving validation loss estimate performance model report performance classifier test set table benchmark performance fnc fpc using different classification model model evaluated term precision recall score value bold refer best performance obtained full size table empirical result table report fnc fpc performance respect explored classifier moreover table show impact binary orthographic feature used enhance file name representation experiment found kim al. model achieves best performance fnc fpc classifier score 0.983 0.998 respectively concerning machine learning model found best model fnc fpc score 0.970 0.997 respectively worth mentioning preprocessing file name extending binary orthographic feature boosted score model least improvement score may appear modest percentage term real-world impact significant lea face strict time constraint detecting illicit material seize device even slightest enhancement detection rate model could prove beneficial increase chance lea achieving fast detection enabling seizure hard drive containing csem particularly valuable allows detection file related csem whose name clearly indicate relationship using folder name path name additional file found would otherwise undetected case perpetrator careful file name even renames avoid revealing content leaf indication content folder file could detected leading apprehension criminal relevance beyond small increase detection rate model score precision add possibility detecting file above-mentioned situation given superiority kim al. model fnc fpc cnn-based model machine learning model used analyze two fusion technique described earlier table show using two standalone classifier approach always surpasses single-iterative classifier approach therefore result confirm superiority kim identifying csem file score 0.988 nevertheless machine learning file classifier fnc fpc achieved comparable score 0.984 table comparison two fusion technique fusion refers two standalone classifier approach fusion refers single-iterative classifier approach evaluate best machine learning fnc fpc cnn used kim architecture value bold refer best prediction score full size table addition evaluated model complexity term time required predict found two standalone classifier approach used kim al. model fnc fpc outperforms model prediction time second gpu cpu machine respectively owing vectorization functionality hence typical machine gpu could classify file per second discussion among experimented fusion technique recognized superiority two standalone classifier approach could justified following reviewing file path dataset noticed csem path contain explicit csem-related word first example table term look csem related sarah silver starlet still existence term like starlet pink skirt number could indicator photo session 5-years old girl called sarah dressing pink skirt therefore considering full path name simultaneously allows classifier comprehensive view content rather focusing name sub-directory individually high performance obtained classifier surprising particularly using large dataset compared literature review behavior attributed two main reason lack variety csem file-naming pattern dataset dataset obtained one lea provided sample could group csem producer use similar naming convention another reason clear distinction vocabulary class example rare find csem-related keywords like pedo hot-baby dataset collected public source i.e non-csem class address limitation plan request one lea provide dataset however approach difficult given sensitivity operational data therefore plan use federated learning architecture allows distributed training different datasets without exchanging dataset furthermore plan include non-csem example contain sex-related word movie name collected torrent pornography website conclusion future work paper presented approach identify file could related child sexual exploitation material csem analyzing name absolute path proposed two approach building two standalone classifier file name classifier fnc file path classifier fpc fusing output single decision dividing absolute file path list folder name using fnc classify result strengthen superiority former approach obtained score 0.988 build fnc fpc evaluated six classifier four using machine learning two cnn model fnc preprocessed text extended two new feature binary orthography increased score least explored classifier experiment showed cnn model operates character level could obtain score 0.983 0.998 fnc fpc respectively model classify 50k file second typical gpu computer empirical evaluation conducted using dataset extracted file name path future work look forward enlarging dataset exposing model broader csem naming pattern datasets different law enforcement agency however given dataset sensitivity plan use federated learning architecture assessment transformer bert noisy short text evaluated shortly finally text de-obfuscation part immediate future research
introduction quantum state preparation key many application require data input finance chemistry bioinformatics machine learning optimisation ability generate arbitrary quantum state efficiently effectively high accuracy low depth gate count therefore important future application quantum computing existing state preparation technique typically produce lengthy circuit many qubit operation quantum gate compromising implementation near-term hardware paper present genetic algorithm state preparation gasp creates circuit state preparation specified accuracy depth evolutionary framework work build relatively old idea application genetic algorithm quantum circuit evolution benchmarking purpose method produce circuit exact state preparation focus method shende bullock markov sbm encoded qiskit library sbm approach produce -qubit arbitrary state using circuit containing n+1 2n\ cnot gate benchmark gasp method qiskit gaussian state w-states context simulation gate noise implementation physical device gasp circuit much lower depth design prospect implementation physical noisy intermediate quantum nisq device better show explicit example genetic algorithm classical optimisation technique aim mimic process biological evolution basic structure genetic algorithm first establish population individual evolve population many individual single individual generic genetic algorithm usually many individual use crossover however population single individual asexual mutation individual attempted solution given problem defined chromosome parameter chromosome represents gene population subject iterative process individual selected selection criterion rank selection roulette wheel selection etc selected individual bred together and/or mutated iteration genetic algorithm referred generation generation fitness individual population evaluated objective fitness function fittest individual highest probability bred together and/or mutated individual form next generation algorithm effort iteratively increase maximum fitness generally algorithm completed specific fitness achieved given number iteration run without achieving specific fitness method optimisation allows solution pulled local optimum move towards global optimum important aspect genetic algorithm approach follows see section method detail initial population/individual sexual genetic algorithm initial population randomly generated specified population size parameter ideally considerable amount divergence different individual allow broad area problem search space covered asexual genetic algorithm initial population single individual individual population instantiated chromosome defining set gene representation subject problem solved example possible chromosome representation include binary representation list representation crossover crossover process two parent bred together producing child contains one-half genomic information one parent one-half various method crossover genetic algorithm main two single-point crossover k-point crossover crossover point chromosome list chromosome split single-point crossover crossover point chosen child genomic information taken one parent crossover point one parent crossover point k-point crossover slightly generalised version process crossover point genomic information child end k+1\ section alternating parent mutation mutation process individual gene individual randomly mutated probability increase genetic diversity population sexual genetic algorithm mutation rate set low high mutation rate tend towards primitive random search asexual genetic algorithm mutation rate generally higher mean introduce genetic diversity individual mutation operation allows genetic algorithm increased genetic diversity increasing search space allowing algorithm potentially escape local minimum selection selection process fittest individual chosen crossover procedure generally involves assigning probability selection individual based fitness many selection method common method include roulette wheel selection rank selection tournament selection roulette wheel selection individual given probability selected dependent fitness allows fittest individual highest probability passing gene next generation also allows lucky unfit individual pas gene next generation increasing genetic diversity advantage method genetic material conserved rank selection sort individual fitness chooses fittest individual crossover advantage method quickly converge optimal solution virtue taking fittest individual tournament selection randomly pair individual selects individual higher fitness two crossover intermediary roulette wheel rank selection allowing potential faster convergence maintaining potentially higher level genetic diversity quantum circuit space introduction genetic algorithm focused largely producing circuit generate specific unitaries applied quantum machine learning flowchart describing gasp depicted fig work genetic algorithm designed evolve quantum circuit task state preparation context individual quantum circuit gene single quantum logic operation gate given quantum circuit figure overview gasp approach given desired target state vector target create initial population individual p_i\ quantum circuit generates population state appropriate number qubits number gene given state vector ass fitness state vector determined individual population p_i target p_i iii apply crossover population producing new mutate entire population probability p=5\ run classical optimisation mutated individual obtain optimal value 2\pi\ achieve highest fitness generated circuit apply roulette wheel selection population select individual next generation based assessed fitness vii repeat desired fitness achieved maxiter iteration since last increase fitness achieved viii maxiter iteration since last increase fitness increase number gene return full size image structure paper follows section result present result section method describe method presented detail section discussion conclusion potential future work result gaussian state gaussian state relatively low entanglement defined aligned 2^n i=0 2^n-1 aligned 2\pi -\frac mean standard deviation desired gaussian purpose paper let 2^n 2^n fig show example gasp circuit comparing depth gate count produced qiskit initialise function comparison state produced qiskit initialise function gasp absence noise shown fig qubit gaussian state zero-noise regime data show qiskit method produce target exactly expected gasp within specified fidelity tolerance case qubit gaussian comparison state produced qiskit initialise function gasp simulated presence noise modelled ibmq_guadalupe shown fig 16,384 shot used seen gasp performs much better reproducing desired target state vector presence noise though perfectly show slight reduction accuracy circuit large reduction circuit depth improves desired outcome state presence noise gasp producing circuit shorter order magnitude allow realistic circuit implemented nisq-era hardware figure show comparison gasp qiskit gaussian state term gate scaling vs. number qubits figure show improved performance circuit generated gasp relative qiskit simulated noise run ibm ibmq_guadalupe machine averaged test number qubits varied noting measure doe include phase information figure comparison sample solution circuit generated gasp qiskit qubit gaussian gasp produced circuit depth gate qiskit produced circuit depth gate note circuit compilation real hardware comparison qiskit gasp fidelity resultant distribution noise qubit gaussian state grey dashed line exact distribution orange bar gasp blue bar qiskit comparison qiskit gasp fidelity resultant distribution presence noise qubit gaussian state noise model ibm ibmq_guadalupe machine 16,384 shot used grey dashed line exact distribution without noise orange bar gasp blue bar qiskit gate comparison qiskit gasp fidelity gaussian state number qubits varied comparison gasp fidelity qiskit gaussian state number qubits varied line represent simulation noise cross represent result ibm ibmq_guadalupe machine 16,384 shot used noise model ibm ibmq_guadalupe machine full size image w-states w-states generally higher entanglement defined aligned aligned number qubits fig show example gasp circuit comparing depth gate count produced qiskit initialise function comparison produced state qiskit initialise function gasp noise shown fig figure show comparison qiskit gasp fidelity resultant distribution presence noise qubit state noise model ibm ibmq_guadalupe machine 16,384 shot used grey dashed line exact distribution without noise orange bar gasp blue bar qiskit figure show comparison qiskit gasp fidelity w-states number qubits varied figure show performance circuit generated gasp qiskit simulated noise averaged test number qubits varied noting measure doe include phase information figure comparison sample solution circuit generated gasp qiskit qubit state gasp produced circuit depth gate qiskit produced circuit depth gate note circuit compilation real hardware comparison qiskit gasp fidelity resultant distribution noise qubit state grey dashed line exact distribution orange bar gasp blue bar qiskit comparison qiskit gasp fidelity resultant distribution presence noise qubit state noise model ibm ibmq_guadalupe machine 16,384 shot used grey dashed line exact distribution without noise orange bar gasp blue bar qiskit comparison qiskit gasp fidelity w-states number qubits varied comparison gasp fidelity qiskit w-states number qubits varied line represent simulation noise cross represent result ibm ibmq_guadalupe machine 16,384 shot used noise model ibm ibmq_guadalupe machine full size image seen result shown gasp consistently outperforms qiskit number total gate number cnot gate required two order magnitude higher qubit test seems gasp lower polynomial complexity number gate required compared qiskit initialisation method noted number gate required gaussian state generation fewer w-states likely due gaussian state entangled w-states seen circuit produced gasp higher noise robustness circuit produced qiskit initialisation however length circuit produced technique high number qubits many gate noise overwhelms ability circuit produce desired state also noted useful fidelity gasp outperforms qiskit initialisation method gasp gene represented aligned gene ^\textit ^\textit ^\textit ^\textit aligned individual represented aligned p_i gene gene gene aligned gene 0\ldots represents gate application q_t\ target qubit chosen gate type r_x r_y r_z cnot q_c\ control qubit rotation angle chosen gate single qubit gate q_c\ set none two-qubit gate q_c\ set another qubit circuit set none allowing classical optimisation optimisation single-qubit rotation angle number gene individual dependent many gate circuit contains mutation genetic algorithm would changing certain gate given probability crossover crossover method used gasp simple 1-point crossover one half parent applied every generation i.e crossover point quantum circuit context result new circuit containing half gate first individual half gate second individual mutation mutation gasp applied every generation default probability mutation however parameter varied dependent problem solved basic mutation quantum circuit change certain gene individual gene resulting different gate quantum circuit changing resultant state vector fitness given target state vector target resultant state vector current individual p_i gasp search individual whose circuit produce highest fitness fitness calculated cost function aligned p_i target p_i aligned norm squared inner product target state vector individual state vector similarity target state vector individual state vector fitness individual always value selection method selection used gasp roulette wheel selection allows genetic diversity maintained generation algorithm also increasing fitness done initially summing total fitness entire population individual f_t\ giving individual normalised fitness relative fitness entire population i.e f_t p_i p_i p_i f_t individual next generation selected based respective fitness algorithm chosen target population individual produced certain number gene based entanglement target state individual quantum circuit gene one four gate identified universal set listed section method r_x r_y r_z cnot fitness individual assessed fitness function crossover applied population produce new individual doubling population individual population mutated probability slsqp optimisation run individual population find optimal given individual population subject roulette wheel selection select individual next generation halving population back original size process repeated iteratively increasing best fitness population desired fitness achieved within maxiter presented result iteration last increase fitness number gene individual increased one process restarts desired target state vector target also determines number qubits selected gasp broken following step initial population individual p_i\ created dictate trial state vector p_i appropriate number qubits number gene given state vector fitness state vector determined individual population p_i target p_i assessed crossover applied population generating new entire population mutated probability p=5\ classical optimisation run mutated individual obtain optimal value 2\pi\ achieve highest fitness generated circuit roulette wheel selection applied population select individual next generation based assessed fitness step ii–vi repeated desired fitness achieved maxiter maxiter parameter set prior start algorithm iteration since last increase fitness achieved maxiter iteration since last increase fitness achieved increase number gene return step gasp genetic algorithm utilised determine course-grained optimisation quantum circuit structure much better fine-grained algorithm slsqp used determining optimal angle circuit structure generated allows optimal least close optimal fitness generated circuit structure achieved discussion paper proposed demonstrated state preparation method based genetic evolutionary approach benchmarking gasp qiskit initialisation method result show noisy regime relevant implementation actual hardware gasp significantly outperforms exact approach superior circuit compression order magnitude gasp stochastic algorithm increase run time deterministic algorithm introduced uncertainty ability produce solution however significant reduction total gate count number required cnot gate may outweigh application gasp initialisation quantum state circuit length feasible nisq-era hardware gasp general technique work given state work beyond paper include using gasp generate general quantum state preparation problem amplitude-encoded image data particle physic data biological data additionally work classical simulation quantum state would interesting future work develop cost function gasp could run actual quantum computer note preparation work recent paper rindell studying state preparation using genetic algorithm posted arxiv method similar gasp approach presented though differs used fast non-dominated sorting genetic algorithm implemented deap python package different gate set r_z cnot\ also use classical optimisation instead opting adjust adding value selected gaussian distribution method applied production haar random state qubits demonstrating similar fidelity improvement presence noise